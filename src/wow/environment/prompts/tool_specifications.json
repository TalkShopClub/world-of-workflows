{
  "tool_specifications": [
    {
      "name": "list_tool_packages",
      "description": "Lists available tool packages and the currently loaded one.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "random_string": {
            "type": "string",
            "description": "Dummy parameter for no-parameter tools"
          }
        },
        "required": [
          "random_string"
        ]
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 1,
        "required_parameters": [
          "random_string"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "random_string": "string"
        },
        "has_description": true,
        "complexity_score": 2
      }
    },
    {
      "name": "create_incident",
      "description": "Create a new incident in ServiceNow",
      "inputSchema": {
        "description": "Parameters for creating an incident.",
        "properties": {
          "short_description": {
            "description": "Short description of the incident",
            "title": "Short Description",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Detailed description of the incident",
            "title": "Description"
          },
          "caller_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "User who reported the incident",
            "title": "Caller Id"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Category of the incident",
            "title": "Category"
          },
          "subcategory": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Subcategory of the incident",
            "title": "Subcategory"
          },
          "priority": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Priority of the incident",
            "title": "Priority"
          },
          "impact": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Impact of the incident",
            "title": "Impact"
          },
          "urgency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Urgency of the incident",
            "title": "Urgency"
          },
          "assigned_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "User assigned to the incident",
            "title": "Assigned To"
          },
          "assignment_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Group assigned to the incident",
            "title": "Assignment Group"
          },
          "fields": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Dictionary of other field names and corresponding values to set for the POST request. Example: {'priority': '1'}",
            "title": "Fields"
          }
        },
        "required": [
          "short_description"
        ],
        "title": "CreateIncidentParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 11,
        "required_parameters": [
          "short_description"
        ],
        "optional_parameters": [
          "description",
          "caller_id",
          "category",
          "subcategory",
          "priority",
          "impact",
          "urgency",
          "assigned_to",
          "assignment_group",
          "fields"
        ],
        "parameter_types": {
          "short_description": "string",
          "description": "unknown",
          "caller_id": "unknown",
          "category": "unknown",
          "subcategory": "unknown",
          "priority": "unknown",
          "impact": "unknown",
          "urgency": "unknown",
          "assigned_to": "unknown",
          "assignment_group": "unknown",
          "fields": "unknown"
        },
        "has_description": true,
        "complexity_score": 12
      }
    },
    {
      "name": "update_incident",
      "description": "Update an existing incident in ServiceNow",
      "inputSchema": {
        "description": "Parameters for updating an incident.",
        "properties": {
          "incident_id": {
            "description": "Incident ID or sys_id",
            "title": "Incident Id",
            "type": "string"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Short description of the incident",
            "title": "Short Description"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Detailed description of the incident",
            "title": "Description"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "State of the incident",
            "title": "State"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Category of the incident",
            "title": "Category"
          },
          "subcategory": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Subcategory of the incident",
            "title": "Subcategory"
          },
          "priority": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Priority of the incident",
            "title": "Priority"
          },
          "impact": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Impact of the incident",
            "title": "Impact"
          },
          "urgency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Urgency of the incident",
            "title": "Urgency"
          },
          "assigned_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "User assigned to the incident",
            "title": "Assigned To"
          },
          "assignment_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Group assigned to the incident",
            "title": "Assignment Group"
          },
          "work_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Work notes to add to the incident",
            "title": "Work Notes"
          },
          "close_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Close notes to add to the incident",
            "title": "Close Notes"
          },
          "close_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Close code for the incident",
            "title": "Close Code"
          }
        },
        "required": [
          "incident_id"
        ],
        "title": "UpdateIncidentParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 14,
        "required_parameters": [
          "incident_id"
        ],
        "optional_parameters": [
          "short_description",
          "description",
          "state",
          "category",
          "subcategory",
          "priority",
          "impact",
          "urgency",
          "assigned_to",
          "assignment_group",
          "work_notes",
          "close_notes",
          "close_code"
        ],
        "parameter_types": {
          "incident_id": "string",
          "short_description": "unknown",
          "description": "unknown",
          "state": "unknown",
          "category": "unknown",
          "subcategory": "unknown",
          "priority": "unknown",
          "impact": "unknown",
          "urgency": "unknown",
          "assigned_to": "unknown",
          "assignment_group": "unknown",
          "work_notes": "unknown",
          "close_notes": "unknown",
          "close_code": "unknown"
        },
        "has_description": true,
        "complexity_score": 15
      }
    },
    {
      "name": "add_comment",
      "description": "Add a comment to an incident in ServiceNow",
      "inputSchema": {
        "description": "Parameters for adding a comment to an incident.",
        "properties": {
          "incident_id": {
            "description": "Incident ID or sys_id",
            "title": "Incident Id",
            "type": "string"
          },
          "comment": {
            "description": "Comment to add to the incident",
            "title": "Comment",
            "type": "string"
          },
          "is_work_note": {
            "default": false,
            "description": "Whether the comment is a work note",
            "title": "Is Work Note",
            "type": "boolean"
          }
        },
        "required": [
          "incident_id",
          "comment"
        ],
        "title": "AddCommentParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 3,
        "required_parameters": [
          "incident_id",
          "comment"
        ],
        "optional_parameters": [
          "is_work_note"
        ],
        "parameter_types": {
          "incident_id": "string",
          "comment": "string",
          "is_work_note": "boolean"
        },
        "has_description": true,
        "complexity_score": 5
      }
    },
    {
      "name": "resolve_incident",
      "description": "Resolve an incident in ServiceNow",
      "inputSchema": {
        "description": "Parameters for resolving an incident.",
        "properties": {
          "incident_id": {
            "description": "Incident ID or sys_id",
            "title": "Incident Id",
            "type": "string"
          },
          "resolution_code": {
            "description": "Resolution code for the incident",
            "title": "Resolution Code",
            "type": "string"
          },
          "resolution_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Resolution notes/comment for the incident",
            "title": "Resolution Notes"
          }
        },
        "required": [
          "incident_id",
          "resolution_code"
        ],
        "title": "ResolveIncidentParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 3,
        "required_parameters": [
          "incident_id",
          "resolution_code"
        ],
        "optional_parameters": [
          "resolution_notes"
        ],
        "parameter_types": {
          "incident_id": "string",
          "resolution_code": "string",
          "resolution_notes": "unknown"
        },
        "has_description": true,
        "complexity_score": 5
      }
    },
    {
      "name": "list_incidents",
      "description": "List incidents from ServiceNow",
      "inputSchema": {
        "description": "Parameters for listing incidents.",
        "properties": {
          "limit": {
            "default": 10,
            "description": "Maximum number of incidents to return",
            "title": "Limit",
            "type": "integer"
          },
          "offset": {
            "default": 0,
            "description": "Offset for pagination",
            "title": "Offset",
            "type": "integer"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by incident state",
            "title": "State"
          },
          "assigned_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by assigned user",
            "title": "Assigned To"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by category",
            "title": "Category"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by short description using LIKE matching. The query entered here will be checked against the short description of the incident. Contains information like incident hashtag and more",
            "title": "Query"
          },
          "number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by incident number. This must not contain any special characters like #. This is not the same as incident hashtag",
            "title": "Number"
          }
        },
        "title": "ListIncidentsParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 7,
        "required_parameters": [],
        "optional_parameters": [
          "limit",
          "offset",
          "state",
          "assigned_to",
          "category",
          "query",
          "number"
        ],
        "parameter_types": {
          "limit": "integer",
          "offset": "integer",
          "state": "unknown",
          "assigned_to": "unknown",
          "category": "unknown",
          "query": "unknown",
          "number": "unknown"
        },
        "has_description": true,
        "complexity_score": 7
      }
    },
    {
      "name": "list_catalog_items",
      "description": "List service catalog items.",
      "inputSchema": {
        "description": "Parameters for listing service catalog items.",
        "properties": {
          "item_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "List of catalog item IDs to return",
            "title": "Item Ids"
          },
          "limit": {
            "default": 10,
            "description": "Maximum number of catalog items to return",
            "title": "Limit",
            "type": "integer"
          },
          "offset": {
            "default": 0,
            "description": "Offset for pagination",
            "title": "Offset",
            "type": "integer"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by category",
            "title": "Category"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Search query for catalog items",
            "title": "Query"
          },
          "active": {
            "default": true,
            "description": "Whether to only return active catalog items",
            "title": "Active",
            "type": "boolean"
          }
        },
        "title": "ListCatalogItemsParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 6,
        "required_parameters": [],
        "optional_parameters": [
          "item_ids",
          "limit",
          "offset",
          "category",
          "query",
          "active"
        ],
        "parameter_types": {
          "item_ids": "unknown",
          "limit": "integer",
          "offset": "integer",
          "category": "unknown",
          "query": "unknown",
          "active": "boolean"
        },
        "has_description": true,
        "complexity_score": 6
      }
    },
    {
      "name": "create_catalog_item",
      "description": "Create a new service catalog item.",
      "inputSchema": {
        "description": "Parameters for creating a service catalog item.",
        "properties": {
          "name": {
            "description": "Name of the catalog item",
            "title": "Name",
            "type": "string"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Category of the catalog item",
            "title": "Category"
          },
          "active": {
            "default": true,
            "description": "Whether the catalog item is active",
            "title": "Active",
            "type": "boolean"
          },
          "order": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Order of the catalog item",
            "title": "Order"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Description of the catalog item",
            "title": "Description"
          },
          "price": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Price of the catalog item",
            "title": "Price"
          }
        },
        "required": [
          "name"
        ],
        "title": "CreateCatalogItemParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 6,
        "required_parameters": [
          "name"
        ],
        "optional_parameters": [
          "category",
          "active",
          "order",
          "description",
          "price"
        ],
        "parameter_types": {
          "name": "string",
          "category": "unknown",
          "active": "boolean",
          "order": "unknown",
          "description": "unknown",
          "price": "unknown"
        },
        "has_description": true,
        "complexity_score": 7
      }
    },
    {
      "name": "get_catalog_item",
      "description": "Get a specific service catalog item.",
      "inputSchema": {
        "description": "Parameters for getting a specific service catalog item.",
        "properties": {
          "item_id": {
            "description": "Catalog item ID or sys_id",
            "title": "Item Id",
            "type": "string"
          }
        },
        "required": [
          "item_id"
        ],
        "title": "GetCatalogItemParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 1,
        "required_parameters": [
          "item_id"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "item_id": "string"
        },
        "has_description": true,
        "complexity_score": 2
      }
    },
    {
      "name": "list_catalog_categories",
      "description": "List service catalog categories.",
      "inputSchema": {
        "description": "Parameters for listing service catalog categories.",
        "properties": {
          "category_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "List of catalog category sys_ids to return if provided.",
            "title": "Category Ids"
          },
          "limit": {
            "default": 10,
            "description": "Maximum number of categories to return",
            "title": "Limit",
            "type": "integer"
          },
          "offset": {
            "default": 0,
            "description": "Offset for pagination",
            "title": "Offset",
            "type": "integer"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Search query for categories",
            "title": "Query"
          },
          "active": {
            "default": true,
            "description": "Whether to only return active categories",
            "title": "Active",
            "type": "boolean"
          }
        },
        "title": "ListCatalogCategoriesParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 5,
        "required_parameters": [],
        "optional_parameters": [
          "category_ids",
          "limit",
          "offset",
          "query",
          "active"
        ],
        "parameter_types": {
          "category_ids": "unknown",
          "limit": "integer",
          "offset": "integer",
          "query": "unknown",
          "active": "boolean"
        },
        "has_description": true,
        "complexity_score": 5
      }
    },
    {
      "name": "create_catalog_category",
      "description": "Create a new service catalog category.",
      "inputSchema": {
        "description": "Parameters for creating a new service catalog category.",
        "properties": {
          "title": {
            "description": "Title of the category",
            "title": "Title",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Description of the category",
            "title": "Description"
          },
          "parent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Parent category sys_id",
            "title": "Parent"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Icon for the category",
            "title": "Icon"
          },
          "active": {
            "default": true,
            "description": "Whether the category is active",
            "title": "Active",
            "type": "boolean"
          },
          "order": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Order of the category",
            "title": "Order"
          }
        },
        "required": [
          "title"
        ],
        "title": "CreateCatalogCategoryParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 6,
        "required_parameters": [
          "title"
        ],
        "optional_parameters": [
          "description",
          "parent",
          "icon",
          "active",
          "order"
        ],
        "parameter_types": {
          "title": "string",
          "description": "unknown",
          "parent": "unknown",
          "icon": "unknown",
          "active": "boolean",
          "order": "unknown"
        },
        "has_description": true,
        "complexity_score": 7
      }
    },
    {
      "name": "delete_catalog_category",
      "description": "Delete an existing service catalog category.",
      "inputSchema": {
        "description": "Parameters for deleting a service catalog category.",
        "properties": {
          "category_id": {
            "description": "Category ID or sys_id",
            "title": "Category Id",
            "type": "string"
          }
        },
        "required": [
          "category_id"
        ],
        "title": "DeleteCatalogCategoryParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 1,
        "required_parameters": [
          "category_id"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "category_id": "string"
        },
        "has_description": true,
        "complexity_score": 2
      }
    },
    {
      "name": "update_catalog_category",
      "description": "Update an existing service catalog category.",
      "inputSchema": {
        "description": "Parameters for updating a service catalog category.",
        "properties": {
          "category_id": {
            "description": "Category ID or sys_id",
            "title": "Category Id",
            "type": "string"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Title of the category",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Description of the category",
            "title": "Description"
          },
          "parent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Parent category sys_id",
            "title": "Parent"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Icon for the category",
            "title": "Icon"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Whether the category is active",
            "title": "Active"
          },
          "order": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Order of the category",
            "title": "Order"
          }
        },
        "required": [
          "category_id"
        ],
        "title": "UpdateCatalogCategoryParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 7,
        "required_parameters": [
          "category_id"
        ],
        "optional_parameters": [
          "title",
          "description",
          "parent",
          "icon",
          "active",
          "order"
        ],
        "parameter_types": {
          "category_id": "string",
          "title": "unknown",
          "description": "unknown",
          "parent": "unknown",
          "icon": "unknown",
          "active": "unknown",
          "order": "unknown"
        },
        "has_description": true,
        "complexity_score": 8
      }
    },
    {
      "name": "move_catalog_items",
      "description": "Move catalog items to a different category.",
      "inputSchema": {
        "description": "Parameters for moving catalog items between categories.",
        "properties": {
          "item_ids": {
            "description": "List of catalog item IDs to move",
            "items": {
              "type": "string"
            },
            "title": "Item Ids",
            "type": "array"
          },
          "target_category_id": {
            "description": "Target category ID to move items to",
            "title": "Target Category Id",
            "type": "string"
          }
        },
        "required": [
          "item_ids",
          "target_category_id"
        ],
        "title": "MoveCatalogItemsParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 2,
        "required_parameters": [
          "item_ids",
          "target_category_id"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "item_ids": "array",
          "target_category_id": "string"
        },
        "has_description": true,
        "complexity_score": 4
      }
    },
    {
      "name": "get_optimization_recommendations",
      "description": "Get optimization recommendations for the service catalog.",
      "inputSchema": {
        "description": "Parameters for getting optimization recommendations.",
        "properties": {
          "recommendation_types": {
            "items": {
              "type": "string"
            },
            "title": "Recommendation Types",
            "type": "array"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Category Id"
          }
        },
        "required": [
          "recommendation_types"
        ],
        "title": "OptimizationRecommendationsParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 2,
        "required_parameters": [
          "recommendation_types"
        ],
        "optional_parameters": [
          "category_id"
        ],
        "parameter_types": {
          "recommendation_types": "array",
          "category_id": "unknown"
        },
        "has_description": true,
        "complexity_score": 3
      }
    },
    {
      "name": "update_catalog_item",
      "description": "Update a service catalog item.",
      "inputSchema": {
        "description": "Parameters for updating a catalog item.",
        "properties": {
          "item_id": {
            "title": "Item Id",
            "type": "string"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Name"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Short Description"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Description"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Category"
          },
          "price": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Price"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Active"
          },
          "order": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Order"
          }
        },
        "required": [
          "item_id"
        ],
        "title": "UpdateCatalogItemParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 8,
        "required_parameters": [
          "item_id"
        ],
        "optional_parameters": [
          "name",
          "short_description",
          "description",
          "category",
          "price",
          "active",
          "order"
        ],
        "parameter_types": {
          "item_id": "string",
          "name": "unknown",
          "short_description": "unknown",
          "description": "unknown",
          "category": "unknown",
          "price": "unknown",
          "active": "unknown",
          "order": "unknown"
        },
        "has_description": true,
        "complexity_score": 9
      }
    },
    {
      "name": "create_catalog_item_variable",
      "description": "Create a new catalog item variable",
      "inputSchema": {
        "description": "Parameters for creating a catalog item variable.",
        "properties": {
          "catalog_item_id": {
            "description": "The sys_id of the catalog item",
            "title": "Catalog Item Id",
            "type": "string"
          },
          "name": {
            "description": "The name of the variable (internal name)",
            "title": "Name",
            "type": "string"
          },
          "type": {
            "description": "The type of variable (e.g., string, integer, boolean, reference)",
            "title": "Type",
            "type": "string"
          },
          "label": {
            "description": "The display label for the variable",
            "title": "Label",
            "type": "string"
          },
          "mandatory": {
            "default": false,
            "description": "Whether the variable is required",
            "title": "Mandatory",
            "type": "boolean"
          },
          "help_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Help text to display with the variable",
            "title": "Help Text"
          },
          "default_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Default value for the variable",
            "title": "Default Value"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Description of the variable",
            "title": "Description"
          },
          "order": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Display order of the variable",
            "title": "Order"
          },
          "reference_table": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "For reference fields, the table to reference",
            "title": "Reference Table"
          },
          "reference_qualifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "For reference fields, the query to filter reference options",
            "title": "Reference Qualifier"
          },
          "max_length": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Maximum length for string fields",
            "title": "Max Length"
          },
          "min": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Minimum value for numeric fields",
            "title": "Min"
          },
          "max": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Maximum value for numeric fields",
            "title": "Max"
          }
        },
        "required": [
          "catalog_item_id",
          "name",
          "type",
          "label"
        ],
        "title": "CreateCatalogItemVariableParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 14,
        "required_parameters": [
          "catalog_item_id",
          "name",
          "type",
          "label"
        ],
        "optional_parameters": [
          "mandatory",
          "help_text",
          "default_value",
          "description",
          "order",
          "reference_table",
          "reference_qualifier",
          "max_length",
          "min",
          "max"
        ],
        "parameter_types": {
          "catalog_item_id": "string",
          "name": "string",
          "type": "string",
          "label": "string",
          "mandatory": "boolean",
          "help_text": "unknown",
          "default_value": "unknown",
          "description": "unknown",
          "order": "unknown",
          "reference_table": "unknown",
          "reference_qualifier": "unknown",
          "max_length": "unknown",
          "min": "unknown",
          "max": "unknown"
        },
        "has_description": true,
        "complexity_score": 18
      }
    },
    {
      "name": "list_catalog_item_variables",
      "description": "List catalog item variables",
      "inputSchema": {
        "description": "Parameters for listing catalog item variables.",
        "properties": {
          "catalog_item_id": {
            "description": "The sys_id of the catalog item",
            "title": "Catalog Item Id",
            "type": "string"
          },
          "include_details": {
            "default": true,
            "description": "Whether to include detailed information about each variable",
            "title": "Include Details",
            "type": "boolean"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Maximum number of variables to return",
            "title": "Limit"
          },
          "offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Offset for pagination",
            "title": "Offset"
          }
        },
        "required": [
          "catalog_item_id"
        ],
        "title": "ListCatalogItemVariablesParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 4,
        "required_parameters": [
          "catalog_item_id"
        ],
        "optional_parameters": [
          "include_details",
          "limit",
          "offset"
        ],
        "parameter_types": {
          "catalog_item_id": "string",
          "include_details": "boolean",
          "limit": "unknown",
          "offset": "unknown"
        },
        "has_description": true,
        "complexity_score": 5
      }
    },
    {
      "name": "update_catalog_item_variable",
      "description": "Update a catalog item variable",
      "inputSchema": {
        "description": "Parameters for updating a catalog item variable.",
        "properties": {
          "variable_id": {
            "description": "The sys_id of the variable to update",
            "title": "Variable Id",
            "type": "string"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "The display label for the variable",
            "title": "Label"
          },
          "mandatory": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Whether the variable is required",
            "title": "Mandatory"
          },
          "help_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Help text to display with the variable",
            "title": "Help Text"
          },
          "default_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Default value for the variable",
            "title": "Default Value"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Description of the variable",
            "title": "Description"
          },
          "order": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Display order of the variable",
            "title": "Order"
          },
          "reference_qualifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "For reference fields, the query to filter reference options",
            "title": "Reference Qualifier"
          },
          "max_length": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Maximum length for string fields",
            "title": "Max Length"
          },
          "min": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Minimum value for numeric fields",
            "title": "Min"
          },
          "max": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Maximum value for numeric fields",
            "title": "Max"
          }
        },
        "required": [
          "variable_id"
        ],
        "title": "UpdateCatalogItemVariableParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 11,
        "required_parameters": [
          "variable_id"
        ],
        "optional_parameters": [
          "label",
          "mandatory",
          "help_text",
          "default_value",
          "description",
          "order",
          "reference_qualifier",
          "max_length",
          "min",
          "max"
        ],
        "parameter_types": {
          "variable_id": "string",
          "label": "unknown",
          "mandatory": "unknown",
          "help_text": "unknown",
          "default_value": "unknown",
          "description": "unknown",
          "order": "unknown",
          "reference_qualifier": "unknown",
          "max_length": "unknown",
          "min": "unknown",
          "max": "unknown"
        },
        "has_description": true,
        "complexity_score": 12
      }
    },
    {
      "name": "order_catalog_item",
      "description": "Order a catalog item",
      "inputSchema": {
        "description": "Parameters for ordering a service catalog item.",
        "properties": {
          "item": {
            "description": "Name or sys_id of the catalog item to order. sys_id is preferred.",
            "title": "Item",
            "type": "string"
          },
          "quantity": {
            "description": "Quantity of the catalog item to order",
            "title": "Quantity",
            "type": "string"
          },
          "requested_for": {
            "default": "",
            "description": "Name or sys_id of the person requesting the item. sys_id is preferred.",
            "title": "Requested For",
            "type": "string"
          }
        },
        "required": [
          "item",
          "quantity"
        ],
        "title": "OrderCatalogItemParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 3,
        "required_parameters": [
          "item",
          "quantity"
        ],
        "optional_parameters": [
          "requested_for"
        ],
        "parameter_types": {
          "item": "string",
          "quantity": "string",
          "requested_for": "string"
        },
        "has_description": true,
        "complexity_score": 5
      }
    },
    {
      "name": "create_change_request",
      "description": "Create a new change request in ServiceNow",
      "inputSchema": {
        "description": "Parameters for creating a change request.",
        "properties": {
          "short_description": {
            "description": "Short description of the change request",
            "title": "Short Description",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Detailed description of the change request",
            "title": "Description"
          },
          "type": {
            "description": "Type of change (normal, standard, emergency)",
            "title": "Type",
            "type": "string"
          },
          "risk": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Risk level of the change",
            "title": "Risk"
          },
          "impact": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Impact of the change",
            "title": "Impact"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Category of the change",
            "title": "Category"
          },
          "requested_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "User who requested the change",
            "title": "Requested By"
          },
          "assignment_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Group assigned to the change",
            "title": "Assignment Group"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Planned start date (YYYY-MM-DD HH:MM:SS)",
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Planned end date (YYYY-MM-DD HH:MM:SS)",
            "title": "End Date"
          },
          "fields": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Dictionary of other field names and corresponding values to set for the POST request. Example: {'priority': '1'}",
            "title": "Fields"
          }
        },
        "required": [
          "short_description",
          "type"
        ],
        "title": "CreateChangeRequestParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 11,
        "required_parameters": [
          "short_description",
          "type"
        ],
        "optional_parameters": [
          "description",
          "risk",
          "impact",
          "category",
          "requested_by",
          "assignment_group",
          "start_date",
          "end_date",
          "fields"
        ],
        "parameter_types": {
          "short_description": "string",
          "description": "unknown",
          "type": "string",
          "risk": "unknown",
          "impact": "unknown",
          "category": "unknown",
          "requested_by": "unknown",
          "assignment_group": "unknown",
          "start_date": "unknown",
          "end_date": "unknown",
          "fields": "unknown"
        },
        "has_description": true,
        "complexity_score": 13
      }
    },
    {
      "name": "update_change_request",
      "description": "Update an existing change request in ServiceNow",
      "inputSchema": {
        "description": "Parameters for updating a change request.",
        "properties": {
          "change_id": {
            "description": "Change request ID or sys_id",
            "title": "Change Id",
            "type": "string"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Short description of the change request",
            "title": "Short Description"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Detailed description of the change request",
            "title": "Description"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "State of the change request",
            "title": "State"
          },
          "risk": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Risk level of the change",
            "title": "Risk"
          },
          "impact": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Impact of the change",
            "title": "Impact"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Category of the change",
            "title": "Category"
          },
          "assignment_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Group assigned to the change",
            "title": "Assignment Group"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Planned start date (YYYY-MM-DD HH:MM:SS)",
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Planned end date (YYYY-MM-DD HH:MM:SS)",
            "title": "End Date"
          },
          "work_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Work notes to add to the change request",
            "title": "Work Notes"
          }
        },
        "required": [
          "change_id"
        ],
        "title": "UpdateChangeRequestParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 11,
        "required_parameters": [
          "change_id"
        ],
        "optional_parameters": [
          "short_description",
          "description",
          "state",
          "risk",
          "impact",
          "category",
          "assignment_group",
          "start_date",
          "end_date",
          "work_notes"
        ],
        "parameter_types": {
          "change_id": "string",
          "short_description": "unknown",
          "description": "unknown",
          "state": "unknown",
          "risk": "unknown",
          "impact": "unknown",
          "category": "unknown",
          "assignment_group": "unknown",
          "start_date": "unknown",
          "end_date": "unknown",
          "work_notes": "unknown"
        },
        "has_description": true,
        "complexity_score": 12
      }
    },
    {
      "name": "list_change_requests",
      "description": "List change requests from ServiceNow",
      "inputSchema": {
        "description": "Parameters for listing change requests.",
        "properties": {
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 10,
            "description": "Maximum number of records to return",
            "title": "Limit"
          },
          "offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 0,
            "description": "Offset to start from",
            "title": "Offset"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by state",
            "title": "State"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by type (normal, standard, emergency)",
            "title": "Type"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by category",
            "title": "Category"
          },
          "assignment_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by assignment group",
            "title": "Assignment Group"
          },
          "timeframe": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by timeframe (upcoming, in-progress, completed)",
            "title": "Timeframe"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Additional query string",
            "title": "Query"
          }
        },
        "title": "ListChangeRequestsParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 8,
        "required_parameters": [],
        "optional_parameters": [
          "limit",
          "offset",
          "state",
          "type",
          "category",
          "assignment_group",
          "timeframe",
          "query"
        ],
        "parameter_types": {
          "limit": "unknown",
          "offset": "unknown",
          "state": "unknown",
          "type": "unknown",
          "category": "unknown",
          "assignment_group": "unknown",
          "timeframe": "unknown",
          "query": "unknown"
        },
        "has_description": true,
        "complexity_score": 8
      }
    },
    {
      "name": "get_change_request_details",
      "description": "Get detailed information about a specific change request",
      "inputSchema": {
        "description": "Parameters for getting change request details.",
        "properties": {
          "change_id": {
            "description": "Change request ID or sys_id",
            "title": "Change Id",
            "type": "string"
          }
        },
        "required": [
          "change_id"
        ],
        "title": "GetChangeRequestDetailsParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 1,
        "required_parameters": [
          "change_id"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "change_id": "string"
        },
        "has_description": true,
        "complexity_score": 2
      }
    },
    {
      "name": "add_change_task",
      "description": "Add a task to a change request",
      "inputSchema": {
        "description": "Parameters for adding a task to a change request.",
        "properties": {
          "change_id": {
            "description": "Change request ID or sys_id",
            "title": "Change Id",
            "type": "string"
          },
          "short_description": {
            "description": "Short description of the task",
            "title": "Short Description",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Detailed description of the task",
            "title": "Description"
          },
          "assigned_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "User assigned to the task",
            "title": "Assigned To"
          },
          "planned_start_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Planned start date (YYYY-MM-DD HH:MM:SS)",
            "title": "Planned Start Date"
          },
          "planned_end_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Planned end date (YYYY-MM-DD HH:MM:SS)",
            "title": "Planned End Date"
          }
        },
        "required": [
          "change_id",
          "short_description"
        ],
        "title": "AddChangeTaskParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 6,
        "required_parameters": [
          "change_id",
          "short_description"
        ],
        "optional_parameters": [
          "description",
          "assigned_to",
          "planned_start_date",
          "planned_end_date"
        ],
        "parameter_types": {
          "change_id": "string",
          "short_description": "string",
          "description": "unknown",
          "assigned_to": "unknown",
          "planned_start_date": "unknown",
          "planned_end_date": "unknown"
        },
        "has_description": true,
        "complexity_score": 8
      }
    },
    {
      "name": "submit_change_for_approval",
      "description": "Submit a change request for approval",
      "inputSchema": {
        "description": "Parameters for submitting a change request for approval.",
        "properties": {
          "change_id": {
            "description": "Change request ID or sys_id",
            "title": "Change Id",
            "type": "string"
          },
          "approval_comments": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Comments for the approval request",
            "title": "Approval Comments"
          }
        },
        "required": [
          "change_id"
        ],
        "title": "SubmitChangeForApprovalParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 2,
        "required_parameters": [
          "change_id"
        ],
        "optional_parameters": [
          "approval_comments"
        ],
        "parameter_types": {
          "change_id": "string",
          "approval_comments": "unknown"
        },
        "has_description": true,
        "complexity_score": 3
      }
    },
    {
      "name": "approve_change",
      "description": "Approve a change request",
      "inputSchema": {
        "description": "Parameters for approving a change request.",
        "properties": {
          "change_id": {
            "description": "Change request ID or sys_id",
            "title": "Change Id",
            "type": "string"
          },
          "approver_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "ID of the approver",
            "title": "Approver Id"
          },
          "approval_comments": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Comments for the approval",
            "title": "Approval Comments"
          }
        },
        "required": [
          "change_id"
        ],
        "title": "ApproveChangeParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 3,
        "required_parameters": [
          "change_id"
        ],
        "optional_parameters": [
          "approver_id",
          "approval_comments"
        ],
        "parameter_types": {
          "change_id": "string",
          "approver_id": "unknown",
          "approval_comments": "unknown"
        },
        "has_description": true,
        "complexity_score": 4
      }
    },
    {
      "name": "reject_change",
      "description": "Reject a change request",
      "inputSchema": {
        "description": "Parameters for rejecting a change request.",
        "properties": {
          "change_id": {
            "description": "Change request ID or sys_id",
            "title": "Change Id",
            "type": "string"
          },
          "approver_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "ID of the approver",
            "title": "Approver Id"
          },
          "rejection_reason": {
            "description": "Reason for rejection",
            "title": "Rejection Reason",
            "type": "string"
          }
        },
        "required": [
          "change_id",
          "rejection_reason"
        ],
        "title": "RejectChangeParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 3,
        "required_parameters": [
          "change_id",
          "rejection_reason"
        ],
        "optional_parameters": [
          "approver_id"
        ],
        "parameter_types": {
          "change_id": "string",
          "approver_id": "unknown",
          "rejection_reason": "string"
        },
        "has_description": true,
        "complexity_score": 5
      }
    },
    {
      "name": "list_workflows",
      "description": "List workflows from ServiceNow",
      "inputSchema": {
        "description": "Parameters for listing workflows.",
        "properties": {
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 10,
            "description": "Maximum number of records to return",
            "title": "Limit"
          },
          "offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 0,
            "description": "Offset to start from",
            "title": "Offset"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by active status",
            "title": "Active"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by name (contains)",
            "title": "Name"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Additional query string",
            "title": "Query"
          }
        },
        "title": "ListWorkflowsParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 5,
        "required_parameters": [],
        "optional_parameters": [
          "limit",
          "offset",
          "active",
          "name",
          "query"
        ],
        "parameter_types": {
          "limit": "unknown",
          "offset": "unknown",
          "active": "unknown",
          "name": "unknown",
          "query": "unknown"
        },
        "has_description": true,
        "complexity_score": 5
      }
    },
    {
      "name": "get_workflow_details",
      "description": "Get detailed information about a specific workflow",
      "inputSchema": {
        "description": "Parameters for getting workflow details.",
        "properties": {
          "workflow_id": {
            "description": "Workflow ID or sys_id",
            "title": "Workflow Id",
            "type": "string"
          },
          "include_versions": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "description": "Include workflow versions",
            "title": "Include Versions"
          }
        },
        "required": [
          "workflow_id"
        ],
        "title": "GetWorkflowDetailsParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 2,
        "required_parameters": [
          "workflow_id"
        ],
        "optional_parameters": [
          "include_versions"
        ],
        "parameter_types": {
          "workflow_id": "string",
          "include_versions": "unknown"
        },
        "has_description": true,
        "complexity_score": 3
      }
    },
    {
      "name": "list_workflow_versions",
      "description": "List workflow versions from ServiceNow",
      "inputSchema": {
        "description": "Parameters for listing workflow versions.",
        "properties": {
          "workflow_id": {
            "description": "Workflow ID or sys_id",
            "title": "Workflow Id",
            "type": "string"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 10,
            "description": "Maximum number of records to return",
            "title": "Limit"
          },
          "offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 0,
            "description": "Offset to start from",
            "title": "Offset"
          }
        },
        "required": [
          "workflow_id"
        ],
        "title": "ListWorkflowVersionsParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 3,
        "required_parameters": [
          "workflow_id"
        ],
        "optional_parameters": [
          "limit",
          "offset"
        ],
        "parameter_types": {
          "workflow_id": "string",
          "limit": "unknown",
          "offset": "unknown"
        },
        "has_description": true,
        "complexity_score": 4
      }
    },
    {
      "name": "get_workflow_activities",
      "description": "Get activities for a specific workflow",
      "inputSchema": {
        "description": "Parameters for getting workflow activities.",
        "properties": {
          "workflow_id": {
            "description": "Workflow ID or sys_id",
            "title": "Workflow Id",
            "type": "string"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Specific version to get activities for",
            "title": "Version"
          }
        },
        "required": [
          "workflow_id"
        ],
        "title": "GetWorkflowActivitiesParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 2,
        "required_parameters": [
          "workflow_id"
        ],
        "optional_parameters": [
          "version"
        ],
        "parameter_types": {
          "workflow_id": "string",
          "version": "unknown"
        },
        "has_description": true,
        "complexity_score": 3
      }
    },
    {
      "name": "create_workflow",
      "description": "Create a new workflow in ServiceNow",
      "inputSchema": {
        "description": "Parameters for creating a new workflow.",
        "properties": {
          "name": {
            "description": "Name of the workflow",
            "title": "Name",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Description of the workflow",
            "title": "Description"
          },
          "table": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Table the workflow applies to",
            "title": "Table"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": true,
            "description": "Whether the workflow is active",
            "title": "Active"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Additional attributes for the workflow",
            "title": "Attributes"
          }
        },
        "required": [
          "name"
        ],
        "title": "CreateWorkflowParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 5,
        "required_parameters": [
          "name"
        ],
        "optional_parameters": [
          "description",
          "table",
          "active",
          "attributes"
        ],
        "parameter_types": {
          "name": "string",
          "description": "unknown",
          "table": "unknown",
          "active": "unknown",
          "attributes": "unknown"
        },
        "has_description": true,
        "complexity_score": 6
      }
    },
    {
      "name": "update_workflow",
      "description": "Update an existing workflow in ServiceNow",
      "inputSchema": {
        "description": "Parameters for updating a workflow.",
        "properties": {
          "workflow_id": {
            "description": "Workflow ID or sys_id",
            "title": "Workflow Id",
            "type": "string"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Name of the workflow",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Description of the workflow",
            "title": "Description"
          },
          "table": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Table the workflow applies to",
            "title": "Table"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Whether the workflow is active",
            "title": "Active"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Additional attributes for the workflow",
            "title": "Attributes"
          }
        },
        "required": [
          "workflow_id"
        ],
        "title": "UpdateWorkflowParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 6,
        "required_parameters": [
          "workflow_id"
        ],
        "optional_parameters": [
          "name",
          "description",
          "table",
          "active",
          "attributes"
        ],
        "parameter_types": {
          "workflow_id": "string",
          "name": "unknown",
          "description": "unknown",
          "table": "unknown",
          "active": "unknown",
          "attributes": "unknown"
        },
        "has_description": true,
        "complexity_score": 7
      }
    },
    {
      "name": "activate_workflow",
      "description": "Activate a workflow in ServiceNow",
      "inputSchema": {
        "description": "Parameters for activating a workflow.",
        "properties": {
          "workflow_id": {
            "description": "Workflow ID or sys_id",
            "title": "Workflow Id",
            "type": "string"
          }
        },
        "required": [
          "workflow_id"
        ],
        "title": "ActivateWorkflowParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 1,
        "required_parameters": [
          "workflow_id"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "workflow_id": "string"
        },
        "has_description": true,
        "complexity_score": 2
      }
    },
    {
      "name": "deactivate_workflow",
      "description": "Deactivate a workflow in ServiceNow",
      "inputSchema": {
        "description": "Parameters for deactivating a workflow.",
        "properties": {
          "workflow_id": {
            "description": "Workflow ID or sys_id",
            "title": "Workflow Id",
            "type": "string"
          }
        },
        "required": [
          "workflow_id"
        ],
        "title": "DeactivateWorkflowParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 1,
        "required_parameters": [
          "workflow_id"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "workflow_id": "string"
        },
        "has_description": true,
        "complexity_score": 2
      }
    },
    {
      "name": "add_workflow_activity",
      "description": "Add a new activity to a workflow in ServiceNow",
      "inputSchema": {
        "description": "Parameters for adding an activity to a workflow.",
        "properties": {
          "workflow_version_id": {
            "description": "Workflow version ID",
            "title": "Workflow Version Id",
            "type": "string"
          },
          "name": {
            "description": "Name of the activity",
            "title": "Name",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Description of the activity",
            "title": "Description"
          },
          "activity_type": {
            "description": "Type of activity (e.g., 'approval', 'task', 'notification')",
            "title": "Activity Type",
            "type": "string"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Additional attributes for the activity",
            "title": "Attributes"
          }
        },
        "required": [
          "workflow_version_id",
          "name",
          "activity_type"
        ],
        "title": "AddWorkflowActivityParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 5,
        "required_parameters": [
          "workflow_version_id",
          "name",
          "activity_type"
        ],
        "optional_parameters": [
          "description",
          "attributes"
        ],
        "parameter_types": {
          "workflow_version_id": "string",
          "name": "string",
          "description": "unknown",
          "activity_type": "string",
          "attributes": "unknown"
        },
        "has_description": true,
        "complexity_score": 8
      }
    },
    {
      "name": "update_workflow_activity",
      "description": "Update an existing activity in a workflow",
      "inputSchema": {
        "description": "Parameters for updating a workflow activity.",
        "properties": {
          "activity_id": {
            "description": "Activity ID or sys_id",
            "title": "Activity Id",
            "type": "string"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Name of the activity",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Description of the activity",
            "title": "Description"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Additional attributes for the activity",
            "title": "Attributes"
          }
        },
        "required": [
          "activity_id"
        ],
        "title": "UpdateWorkflowActivityParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 4,
        "required_parameters": [
          "activity_id"
        ],
        "optional_parameters": [
          "name",
          "description",
          "attributes"
        ],
        "parameter_types": {
          "activity_id": "string",
          "name": "unknown",
          "description": "unknown",
          "attributes": "unknown"
        },
        "has_description": true,
        "complexity_score": 5
      }
    },
    {
      "name": "delete_workflow_activity",
      "description": "Delete an activity from a workflow",
      "inputSchema": {
        "description": "Parameters for deleting a workflow activity.",
        "properties": {
          "activity_id": {
            "description": "Activity ID or sys_id",
            "title": "Activity Id",
            "type": "string"
          }
        },
        "required": [
          "activity_id"
        ],
        "title": "DeleteWorkflowActivityParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 1,
        "required_parameters": [
          "activity_id"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "activity_id": "string"
        },
        "has_description": true,
        "complexity_score": 2
      }
    },
    {
      "name": "reorder_workflow_activities",
      "description": "Reorder activities in a workflow",
      "inputSchema": {
        "description": "Parameters for reordering workflow activities.",
        "properties": {
          "workflow_id": {
            "description": "Workflow ID or sys_id",
            "title": "Workflow Id",
            "type": "string"
          },
          "activity_ids": {
            "description": "List of activity IDs in the desired order",
            "items": {
              "type": "string"
            },
            "title": "Activity Ids",
            "type": "array"
          }
        },
        "required": [
          "workflow_id",
          "activity_ids"
        ],
        "title": "ReorderWorkflowActivitiesParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 2,
        "required_parameters": [
          "workflow_id",
          "activity_ids"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "workflow_id": "string",
          "activity_ids": "array"
        },
        "has_description": true,
        "complexity_score": 4
      }
    },
    {
      "name": "list_changesets",
      "description": "List changesets from ServiceNow",
      "inputSchema": {
        "description": "Parameters for listing changesets.",
        "properties": {
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 10,
            "description": "Maximum number of records to return",
            "title": "Limit"
          },
          "offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 0,
            "description": "Offset to start from",
            "title": "Offset"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by state",
            "title": "State"
          },
          "application": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by application",
            "title": "Application"
          },
          "developer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by developer",
            "title": "Developer"
          },
          "timeframe": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by timeframe (recent, last_week, last_month)",
            "title": "Timeframe"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Additional query string",
            "title": "Query"
          }
        },
        "title": "ListChangesetsParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 7,
        "required_parameters": [],
        "optional_parameters": [
          "limit",
          "offset",
          "state",
          "application",
          "developer",
          "timeframe",
          "query"
        ],
        "parameter_types": {
          "limit": "unknown",
          "offset": "unknown",
          "state": "unknown",
          "application": "unknown",
          "developer": "unknown",
          "timeframe": "unknown",
          "query": "unknown"
        },
        "has_description": true,
        "complexity_score": 7
      }
    },
    {
      "name": "get_changeset_details",
      "description": "Get detailed information about a specific changeset",
      "inputSchema": {
        "description": "Parameters for getting changeset details.",
        "properties": {
          "changeset_id": {
            "description": "Changeset ID or sys_id",
            "title": "Changeset Id",
            "type": "string"
          }
        },
        "required": [
          "changeset_id"
        ],
        "title": "GetChangesetDetailsParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 1,
        "required_parameters": [
          "changeset_id"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "changeset_id": "string"
        },
        "has_description": true,
        "complexity_score": 2
      }
    },
    {
      "name": "create_changeset",
      "description": "Create a new changeset in ServiceNow",
      "inputSchema": {
        "description": "Parameters for creating a changeset.",
        "properties": {
          "name": {
            "description": "Name of the changeset",
            "title": "Name",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Description of the changeset",
            "title": "Description"
          },
          "application": {
            "description": "Application the changeset belongs to",
            "title": "Application",
            "type": "string"
          },
          "developer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Developer responsible for the changeset",
            "title": "Developer"
          }
        },
        "required": [
          "name",
          "application"
        ],
        "title": "CreateChangesetParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 4,
        "required_parameters": [
          "name",
          "application"
        ],
        "optional_parameters": [
          "description",
          "developer"
        ],
        "parameter_types": {
          "name": "string",
          "description": "unknown",
          "application": "string",
          "developer": "unknown"
        },
        "has_description": true,
        "complexity_score": 6
      }
    },
    {
      "name": "update_changeset",
      "description": "Update an existing changeset in ServiceNow",
      "inputSchema": {
        "description": "Parameters for updating a changeset.",
        "properties": {
          "changeset_id": {
            "description": "Changeset ID or sys_id",
            "title": "Changeset Id",
            "type": "string"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Name of the changeset",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Description of the changeset",
            "title": "Description"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "State of the changeset",
            "title": "State"
          },
          "developer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Developer responsible for the changeset",
            "title": "Developer"
          }
        },
        "required": [
          "changeset_id"
        ],
        "title": "UpdateChangesetParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 5,
        "required_parameters": [
          "changeset_id"
        ],
        "optional_parameters": [
          "name",
          "description",
          "state",
          "developer"
        ],
        "parameter_types": {
          "changeset_id": "string",
          "name": "unknown",
          "description": "unknown",
          "state": "unknown",
          "developer": "unknown"
        },
        "has_description": true,
        "complexity_score": 6
      }
    },
    {
      "name": "commit_changeset",
      "description": "Commit a changeset in ServiceNow",
      "inputSchema": {
        "description": "Parameters for committing a changeset.",
        "properties": {
          "changeset_id": {
            "description": "Changeset ID or sys_id",
            "title": "Changeset Id",
            "type": "string"
          },
          "commit_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Commit message",
            "title": "Commit Message"
          }
        },
        "required": [
          "changeset_id"
        ],
        "title": "CommitChangesetParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 2,
        "required_parameters": [
          "changeset_id"
        ],
        "optional_parameters": [
          "commit_message"
        ],
        "parameter_types": {
          "changeset_id": "string",
          "commit_message": "unknown"
        },
        "has_description": true,
        "complexity_score": 3
      }
    },
    {
      "name": "publish_changeset",
      "description": "Publish a changeset in ServiceNow",
      "inputSchema": {
        "description": "Parameters for publishing a changeset.",
        "properties": {
          "changeset_id": {
            "description": "Changeset ID or sys_id",
            "title": "Changeset Id",
            "type": "string"
          },
          "publish_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Notes for publishing",
            "title": "Publish Notes"
          }
        },
        "required": [
          "changeset_id"
        ],
        "title": "PublishChangesetParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 2,
        "required_parameters": [
          "changeset_id"
        ],
        "optional_parameters": [
          "publish_notes"
        ],
        "parameter_types": {
          "changeset_id": "string",
          "publish_notes": "unknown"
        },
        "has_description": true,
        "complexity_score": 3
      }
    },
    {
      "name": "add_file_to_changeset",
      "description": "Add a file to a changeset in ServiceNow",
      "inputSchema": {
        "description": "Parameters for adding a file to a changeset.",
        "properties": {
          "changeset_id": {
            "description": "Changeset ID or sys_id",
            "title": "Changeset Id",
            "type": "string"
          },
          "file_path": {
            "description": "Path of the file to add",
            "title": "File Path",
            "type": "string"
          },
          "file_content": {
            "description": "Content of the file",
            "title": "File Content",
            "type": "string"
          }
        },
        "required": [
          "changeset_id",
          "file_path",
          "file_content"
        ],
        "title": "AddFileToChangesetParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 3,
        "required_parameters": [
          "changeset_id",
          "file_path",
          "file_content"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "changeset_id": "string",
          "file_path": "string",
          "file_content": "string"
        },
        "has_description": true,
        "complexity_score": 6
      }
    },
    {
      "name": "list_script_includes",
      "description": "List script includes from ServiceNow",
      "inputSchema": {
        "description": "Parameters for listing script includes.",
        "properties": {
          "limit": {
            "default": 10,
            "description": "Maximum number of script includes to return",
            "title": "Limit",
            "type": "integer"
          },
          "offset": {
            "default": 0,
            "description": "Offset for pagination",
            "title": "Offset",
            "type": "integer"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by active status",
            "title": "Active"
          },
          "client_callable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by client callable status",
            "title": "Client Callable"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Search query for script includes",
            "title": "Query"
          }
        },
        "title": "ListScriptIncludesParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 5,
        "required_parameters": [],
        "optional_parameters": [
          "limit",
          "offset",
          "active",
          "client_callable",
          "query"
        ],
        "parameter_types": {
          "limit": "integer",
          "offset": "integer",
          "active": "unknown",
          "client_callable": "unknown",
          "query": "unknown"
        },
        "has_description": true,
        "complexity_score": 5
      }
    },
    {
      "name": "get_script_include",
      "description": "Get a specific script include from ServiceNow",
      "inputSchema": {
        "description": "Parameters for getting a script include.",
        "properties": {
          "script_include_id": {
            "description": "Script include ID or name",
            "title": "Script Include Id",
            "type": "string"
          }
        },
        "required": [
          "script_include_id"
        ],
        "title": "GetScriptIncludeParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 1,
        "required_parameters": [
          "script_include_id"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "script_include_id": "string"
        },
        "has_description": true,
        "complexity_score": 2
      }
    },
    {
      "name": "create_script_include",
      "description": "Create a new script include in ServiceNow",
      "inputSchema": {
        "description": "Parameters for creating a script include.",
        "properties": {
          "name": {
            "description": "Name of the script include",
            "title": "Name",
            "type": "string"
          },
          "script": {
            "description": "Script content",
            "title": "Script",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Description of the script include",
            "title": "Description"
          },
          "api_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "API name of the script include",
            "title": "Api Name"
          },
          "client_callable": {
            "default": false,
            "description": "Whether the script include is client callable",
            "title": "Client Callable",
            "type": "boolean"
          },
          "active": {
            "default": true,
            "description": "Whether the script include is active",
            "title": "Active",
            "type": "boolean"
          },
          "access": {
            "default": "package_private",
            "description": "Access level of the script include",
            "title": "Access",
            "type": "string"
          }
        },
        "required": [
          "name",
          "script"
        ],
        "title": "CreateScriptIncludeParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 7,
        "required_parameters": [
          "name",
          "script"
        ],
        "optional_parameters": [
          "description",
          "api_name",
          "client_callable",
          "active",
          "access"
        ],
        "parameter_types": {
          "name": "string",
          "script": "string",
          "description": "unknown",
          "api_name": "unknown",
          "client_callable": "boolean",
          "active": "boolean",
          "access": "string"
        },
        "has_description": true,
        "complexity_score": 9
      }
    },
    {
      "name": "update_script_include",
      "description": "Update an existing script include in ServiceNow",
      "inputSchema": {
        "description": "Parameters for updating a script include.",
        "properties": {
          "script_include_id": {
            "description": "Script include ID or name",
            "title": "Script Include Id",
            "type": "string"
          },
          "script": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Script content",
            "title": "Script"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Description of the script include",
            "title": "Description"
          },
          "api_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "API name of the script include",
            "title": "Api Name"
          },
          "client_callable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Whether the script include is client callable",
            "title": "Client Callable"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Whether the script include is active",
            "title": "Active"
          },
          "access": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Access level of the script include",
            "title": "Access"
          }
        },
        "required": [
          "script_include_id"
        ],
        "title": "UpdateScriptIncludeParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 7,
        "required_parameters": [
          "script_include_id"
        ],
        "optional_parameters": [
          "script",
          "description",
          "api_name",
          "client_callable",
          "active",
          "access"
        ],
        "parameter_types": {
          "script_include_id": "string",
          "script": "unknown",
          "description": "unknown",
          "api_name": "unknown",
          "client_callable": "unknown",
          "active": "unknown",
          "access": "unknown"
        },
        "has_description": true,
        "complexity_score": 8
      }
    },
    {
      "name": "delete_script_include",
      "description": "Delete a script include in ServiceNow",
      "inputSchema": {
        "description": "Parameters for deleting a script include.",
        "properties": {
          "script_include_id": {
            "description": "Script include ID or name",
            "title": "Script Include Id",
            "type": "string"
          }
        },
        "required": [
          "script_include_id"
        ],
        "title": "DeleteScriptIncludeParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 1,
        "required_parameters": [
          "script_include_id"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "script_include_id": "string"
        },
        "has_description": true,
        "complexity_score": 2
      }
    },
    {
      "name": "create_knowledge_base",
      "description": "Create a new knowledge base in ServiceNow",
      "inputSchema": {
        "description": "Parameters for creating a knowledge base.",
        "properties": {
          "title": {
            "description": "Title of the knowledge base",
            "title": "Title",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Description of the knowledge base",
            "title": "Description"
          },
          "owner": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "The specified admin user or group",
            "title": "Owner"
          },
          "managers": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Users who can manage this knowledge base",
            "title": "Managers"
          },
          "publish_workflow": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "Knowledge - Instant Publish",
            "description": "Publication workflow",
            "title": "Publish Workflow"
          },
          "retire_workflow": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "Knowledge - Instant Retire",
            "description": "Retirement workflow",
            "title": "Retire Workflow"
          }
        },
        "required": [
          "title"
        ],
        "title": "CreateKnowledgeBaseParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 6,
        "required_parameters": [
          "title"
        ],
        "optional_parameters": [
          "description",
          "owner",
          "managers",
          "publish_workflow",
          "retire_workflow"
        ],
        "parameter_types": {
          "title": "string",
          "description": "unknown",
          "owner": "unknown",
          "managers": "unknown",
          "publish_workflow": "unknown",
          "retire_workflow": "unknown"
        },
        "has_description": true,
        "complexity_score": 7
      }
    },
    {
      "name": "list_knowledge_bases",
      "description": "List knowledge bases from ServiceNow",
      "inputSchema": {
        "description": "Parameters for listing knowledge bases.",
        "properties": {
          "limit": {
            "default": 10,
            "description": "Maximum number of knowledge bases to return",
            "title": "Limit",
            "type": "integer"
          },
          "offset": {
            "default": 0,
            "description": "Offset for pagination",
            "title": "Offset",
            "type": "integer"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by active status",
            "title": "Active"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Search query for knowledge bases",
            "title": "Query"
          }
        },
        "title": "ListKnowledgeBasesParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 4,
        "required_parameters": [],
        "optional_parameters": [
          "limit",
          "offset",
          "active",
          "query"
        ],
        "parameter_types": {
          "limit": "integer",
          "offset": "integer",
          "active": "unknown",
          "query": "unknown"
        },
        "has_description": true,
        "complexity_score": 4
      }
    },
    {
      "name": "create_category",
      "description": "Create a new category in a knowledge base",
      "inputSchema": {
        "description": "Parameters for creating a category in a knowledge base.",
        "properties": {
          "title": {
            "description": "Title of the category",
            "title": "Title",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Description of the category",
            "title": "Description"
          },
          "knowledge_base": {
            "description": "The knowledge base to create the category in",
            "title": "Knowledge Base",
            "type": "string"
          },
          "parent_category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Parent category (if creating a subcategory). Sys_id refering to the parent category or sys_id of the parent table.",
            "title": "Parent Category"
          },
          "parent_table": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Parent table (if creating a subcategory). Sys_id refering to the table where the parent category is defined.",
            "title": "Parent Table"
          },
          "active": {
            "default": true,
            "description": "Whether the category is active",
            "title": "Active",
            "type": "boolean"
          }
        },
        "required": [
          "title",
          "knowledge_base"
        ],
        "title": "CreateCategoryParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 6,
        "required_parameters": [
          "title",
          "knowledge_base"
        ],
        "optional_parameters": [
          "description",
          "parent_category",
          "parent_table",
          "active"
        ],
        "parameter_types": {
          "title": "string",
          "description": "unknown",
          "knowledge_base": "string",
          "parent_category": "unknown",
          "parent_table": "unknown",
          "active": "boolean"
        },
        "has_description": true,
        "complexity_score": 8
      }
    },
    {
      "name": "create_article",
      "description": "Create a new knowledge article",
      "inputSchema": {
        "description": "Parameters for creating a knowledge article.",
        "properties": {
          "title": {
            "description": "Title of the article",
            "title": "Title",
            "type": "string"
          },
          "text": {
            "description": "The main body text for the article. Field supports html formatting and wiki markup based on the article_type. HTML is the default.",
            "title": "Text",
            "type": "string"
          },
          "short_description": {
            "description": "Short description of the article",
            "title": "Short Description",
            "type": "string"
          },
          "knowledge_base": {
            "description": "The knowledge base to create the article in",
            "title": "Knowledge Base",
            "type": "string"
          },
          "category": {
            "description": "Category for the article",
            "title": "Category",
            "type": "string"
          },
          "keywords": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Keywords for search",
            "title": "Keywords"
          },
          "article_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "html",
            "description": "The type of article. Options are 'text' or 'wiki'. text lets the text field support html formatting. wiki lets the text field support wiki markup.",
            "title": "Article Type"
          }
        },
        "required": [
          "title",
          "text",
          "short_description",
          "knowledge_base",
          "category"
        ],
        "title": "CreateArticleParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 7,
        "required_parameters": [
          "title",
          "text",
          "short_description",
          "knowledge_base",
          "category"
        ],
        "optional_parameters": [
          "keywords",
          "article_type"
        ],
        "parameter_types": {
          "title": "string",
          "text": "string",
          "short_description": "string",
          "knowledge_base": "string",
          "category": "string",
          "keywords": "unknown",
          "article_type": "unknown"
        },
        "has_description": true,
        "complexity_score": 12
      }
    },
    {
      "name": "update_article",
      "description": "Update an existing knowledge article",
      "inputSchema": {
        "description": "Parameters for updating a knowledge article.",
        "properties": {
          "article_id": {
            "description": "ID of the article to update",
            "title": "Article Id",
            "type": "string"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated title of the article",
            "title": "Title"
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated main body text for the article. Field supports html formatting and wiki markup based on the article_type. HTML is the default.",
            "title": "Text"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated short description",
            "title": "Short Description"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated category for the article",
            "title": "Category"
          },
          "keywords": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated keywords for search",
            "title": "Keywords"
          }
        },
        "required": [
          "article_id"
        ],
        "title": "UpdateArticleParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 6,
        "required_parameters": [
          "article_id"
        ],
        "optional_parameters": [
          "title",
          "text",
          "short_description",
          "category",
          "keywords"
        ],
        "parameter_types": {
          "article_id": "string",
          "title": "unknown",
          "text": "unknown",
          "short_description": "unknown",
          "category": "unknown",
          "keywords": "unknown"
        },
        "has_description": true,
        "complexity_score": 7
      }
    },
    {
      "name": "publish_article",
      "description": "Publish a knowledge article",
      "inputSchema": {
        "description": "Parameters for publishing a knowledge article.",
        "properties": {
          "article_id": {
            "description": "ID of the article to publish",
            "title": "Article Id",
            "type": "string"
          },
          "workflow_state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "published",
            "description": "The workflow state to set",
            "title": "Workflow State"
          },
          "workflow_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "The workflow version to use",
            "title": "Workflow Version"
          }
        },
        "required": [
          "article_id"
        ],
        "title": "PublishArticleParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 3,
        "required_parameters": [
          "article_id"
        ],
        "optional_parameters": [
          "workflow_state",
          "workflow_version"
        ],
        "parameter_types": {
          "article_id": "string",
          "workflow_state": "unknown",
          "workflow_version": "unknown"
        },
        "has_description": true,
        "complexity_score": 4
      }
    },
    {
      "name": "list_articles",
      "description": "List knowledge articles",
      "inputSchema": {
        "description": "Parameters for listing knowledge articles.",
        "properties": {
          "limit": {
            "default": 10,
            "description": "Maximum number of articles to return",
            "title": "Limit",
            "type": "integer"
          },
          "offset": {
            "default": 0,
            "description": "Offset for pagination",
            "title": "Offset",
            "type": "integer"
          },
          "knowledge_base": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by knowledge base",
            "title": "Knowledge Base"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by category",
            "title": "Category"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Search query for articles",
            "title": "Query"
          },
          "workflow_state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by workflow state",
            "title": "Workflow State"
          }
        },
        "title": "ListArticlesParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 6,
        "required_parameters": [],
        "optional_parameters": [
          "limit",
          "offset",
          "knowledge_base",
          "category",
          "query",
          "workflow_state"
        ],
        "parameter_types": {
          "limit": "integer",
          "offset": "integer",
          "knowledge_base": "unknown",
          "category": "unknown",
          "query": "unknown",
          "workflow_state": "unknown"
        },
        "has_description": true,
        "complexity_score": 6
      }
    },
    {
      "name": "get_article",
      "description": "Get a specific knowledge article by ID",
      "inputSchema": {
        "description": "Parameters for getting a knowledge article.",
        "properties": {
          "article_id": {
            "description": "ID of the article to get",
            "title": "Article Id",
            "type": "string"
          }
        },
        "required": [
          "article_id"
        ],
        "title": "GetArticleParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 1,
        "required_parameters": [
          "article_id"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "article_id": "string"
        },
        "has_description": true,
        "complexity_score": 2
      }
    },
    {
      "name": "list_categories",
      "description": "List categories in a knowledge base",
      "inputSchema": {
        "description": "Parameters for listing categories in a knowledge base.",
        "properties": {
          "knowledge_base": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by knowledge base ID",
            "title": "Knowledge Base"
          },
          "parent_category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by parent category ID",
            "title": "Parent Category"
          },
          "limit": {
            "default": 10,
            "description": "Maximum number of categories to return",
            "title": "Limit",
            "type": "integer"
          },
          "offset": {
            "default": 0,
            "description": "Offset for pagination",
            "title": "Offset",
            "type": "integer"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by active status",
            "title": "Active"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Search query for categories",
            "title": "Query"
          }
        },
        "title": "ListCategoriesParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 6,
        "required_parameters": [],
        "optional_parameters": [
          "knowledge_base",
          "parent_category",
          "limit",
          "offset",
          "active",
          "query"
        ],
        "parameter_types": {
          "knowledge_base": "unknown",
          "parent_category": "unknown",
          "limit": "integer",
          "offset": "integer",
          "active": "unknown",
          "query": "unknown"
        },
        "has_description": true,
        "complexity_score": 6
      }
    },
    {
      "name": "create_user",
      "description": "Create a new user in ServiceNow",
      "inputSchema": {
        "description": "Parameters for creating a user.",
        "properties": {
          "user_name": {
            "description": "Username for the user",
            "title": "User Name",
            "type": "string"
          },
          "first_name": {
            "description": "First name of the user",
            "title": "First Name",
            "type": "string"
          },
          "last_name": {
            "description": "Last name of the user",
            "title": "Last Name",
            "type": "string"
          },
          "email": {
            "description": "Email address of the user",
            "title": "Email",
            "type": "string"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Job title of the user",
            "title": "Title"
          },
          "department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Department the user belongs to",
            "title": "Department"
          },
          "manager": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Manager of the user (sys_id or username)",
            "title": "Manager"
          },
          "roles": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Roles to assign to the user",
            "title": "Roles"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Phone number of the user",
            "title": "Phone"
          },
          "mobile_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Mobile phone number of the user",
            "title": "Mobile Phone"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Location of the user",
            "title": "Location"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Password for the user account",
            "title": "Password"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": true,
            "description": "Whether the user account is active",
            "title": "Active"
          },
          "fields": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Dictionary of other field names and corresponding values to set for the POST request. Example: {'priority': '1'}",
            "title": "Fields"
          }
        },
        "required": [
          "user_name",
          "first_name",
          "last_name",
          "email"
        ],
        "title": "CreateUserParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 14,
        "required_parameters": [
          "user_name",
          "first_name",
          "last_name",
          "email"
        ],
        "optional_parameters": [
          "title",
          "department",
          "manager",
          "roles",
          "phone",
          "mobile_phone",
          "location",
          "password",
          "active",
          "fields"
        ],
        "parameter_types": {
          "user_name": "string",
          "first_name": "string",
          "last_name": "string",
          "email": "string",
          "title": "unknown",
          "department": "unknown",
          "manager": "unknown",
          "roles": "unknown",
          "phone": "unknown",
          "mobile_phone": "unknown",
          "location": "unknown",
          "password": "unknown",
          "active": "unknown",
          "fields": "unknown"
        },
        "has_description": true,
        "complexity_score": 18
      }
    },
    {
      "name": "update_user",
      "description": "Update an existing user in ServiceNow",
      "inputSchema": {
        "description": "Parameters for updating a user.",
        "properties": {
          "user_id": {
            "description": "User ID or sys_id to update",
            "title": "User Id",
            "type": "string"
          },
          "user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Username for the user",
            "title": "User Name"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "First name of the user",
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Last name of the user",
            "title": "Last Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Email address of the user",
            "title": "Email"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Job title of the user",
            "title": "Title"
          },
          "department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Department the user belongs to",
            "title": "Department"
          },
          "manager": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Manager of the user (sys_id or username)",
            "title": "Manager"
          },
          "roles": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Roles to assign to the user",
            "title": "Roles"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Phone number of the user",
            "title": "Phone"
          },
          "mobile_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Mobile phone number of the user",
            "title": "Mobile Phone"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Location of the user",
            "title": "Location"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Password for the user account",
            "title": "Password"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Whether the user account is active",
            "title": "Active"
          }
        },
        "required": [
          "user_id"
        ],
        "title": "UpdateUserParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 14,
        "required_parameters": [
          "user_id"
        ],
        "optional_parameters": [
          "user_name",
          "first_name",
          "last_name",
          "email",
          "title",
          "department",
          "manager",
          "roles",
          "phone",
          "mobile_phone",
          "location",
          "password",
          "active"
        ],
        "parameter_types": {
          "user_id": "string",
          "user_name": "unknown",
          "first_name": "unknown",
          "last_name": "unknown",
          "email": "unknown",
          "title": "unknown",
          "department": "unknown",
          "manager": "unknown",
          "roles": "unknown",
          "phone": "unknown",
          "mobile_phone": "unknown",
          "location": "unknown",
          "password": "unknown",
          "active": "unknown"
        },
        "has_description": true,
        "complexity_score": 15
      }
    },
    {
      "name": "get_user",
      "description": "Get a specific user in ServiceNow",
      "inputSchema": {
        "description": "Parameters for getting a user.",
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "User ID or sys_id",
            "title": "User Id"
          },
          "user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Username of the user",
            "title": "User Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Email address of the user",
            "title": "Email"
          }
        },
        "title": "GetUserParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 3,
        "required_parameters": [],
        "optional_parameters": [
          "user_id",
          "user_name",
          "email"
        ],
        "parameter_types": {
          "user_id": "unknown",
          "user_name": "unknown",
          "email": "unknown"
        },
        "has_description": true,
        "complexity_score": 3
      }
    },
    {
      "name": "list_users",
      "description": "List users in ServiceNow",
      "inputSchema": {
        "description": "Parameters for listing users.",
        "properties": {
          "limit": {
            "default": 10,
            "description": "Maximum number of users to return",
            "title": "Limit",
            "type": "integer"
          },
          "offset": {
            "default": 0,
            "description": "Offset for pagination",
            "title": "Offset",
            "type": "integer"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by active status",
            "title": "Active"
          },
          "department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by department",
            "title": "Department"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Case-insensitive search term that matches against name, username, or email fields. Uses ServiceNow's LIKE operator for partial matching.",
            "title": "Query"
          }
        },
        "title": "ListUsersParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 5,
        "required_parameters": [],
        "optional_parameters": [
          "limit",
          "offset",
          "active",
          "department",
          "query"
        ],
        "parameter_types": {
          "limit": "integer",
          "offset": "integer",
          "active": "unknown",
          "department": "unknown",
          "query": "unknown"
        },
        "has_description": true,
        "complexity_score": 5
      }
    },
    {
      "name": "create_group",
      "description": "Create a new group in ServiceNow",
      "inputSchema": {
        "description": "Parameters for creating a group.",
        "properties": {
          "name": {
            "description": "Name of the group",
            "title": "Name",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Description of the group",
            "title": "Description"
          },
          "manager": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Manager of the group (sys_id or username)",
            "title": "Manager"
          },
          "parent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Parent group (sys_id or name)",
            "title": "Parent"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Type of the group",
            "title": "Type"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Email address for the group",
            "title": "Email"
          },
          "members": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "List of user sys_ids or usernames to add as members",
            "title": "Members"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": true,
            "description": "Whether the group is active",
            "title": "Active"
          }
        },
        "required": [
          "name"
        ],
        "title": "CreateGroupParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 8,
        "required_parameters": [
          "name"
        ],
        "optional_parameters": [
          "description",
          "manager",
          "parent",
          "type",
          "email",
          "members",
          "active"
        ],
        "parameter_types": {
          "name": "string",
          "description": "unknown",
          "manager": "unknown",
          "parent": "unknown",
          "type": "unknown",
          "email": "unknown",
          "members": "unknown",
          "active": "unknown"
        },
        "has_description": true,
        "complexity_score": 9
      }
    },
    {
      "name": "update_group",
      "description": "Update an existing group in ServiceNow",
      "inputSchema": {
        "description": "Parameters for updating a group.",
        "properties": {
          "group_id": {
            "description": "Group ID or sys_id to update",
            "title": "Group Id",
            "type": "string"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Name of the group",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Description of the group",
            "title": "Description"
          },
          "manager": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Manager of the group (sys_id or username)",
            "title": "Manager"
          },
          "parent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Parent group (sys_id or name)",
            "title": "Parent"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Type of the group",
            "title": "Type"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Email address for the group",
            "title": "Email"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Whether the group is active",
            "title": "Active"
          }
        },
        "required": [
          "group_id"
        ],
        "title": "UpdateGroupParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 8,
        "required_parameters": [
          "group_id"
        ],
        "optional_parameters": [
          "name",
          "description",
          "manager",
          "parent",
          "type",
          "email",
          "active"
        ],
        "parameter_types": {
          "group_id": "string",
          "name": "unknown",
          "description": "unknown",
          "manager": "unknown",
          "parent": "unknown",
          "type": "unknown",
          "email": "unknown",
          "active": "unknown"
        },
        "has_description": true,
        "complexity_score": 9
      }
    },
    {
      "name": "list_group_members",
      "description": "List members of an existing group in ServiceNow",
      "inputSchema": {
        "description": "Parameters for listing members of a group.",
        "properties": {
          "group_id": {
            "description": "Group ID or sys_id",
            "title": "Group Id",
            "type": "string"
          }
        },
        "required": [
          "group_id"
        ],
        "title": "ListGroupMembersParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 1,
        "required_parameters": [
          "group_id"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "group_id": "string"
        },
        "has_description": true,
        "complexity_score": 2
      }
    },
    {
      "name": "add_group_members",
      "description": "Add members to an existing group in ServiceNow",
      "inputSchema": {
        "description": "Parameters for adding members to a group.",
        "properties": {
          "group_id": {
            "description": "Group ID or sys_id",
            "title": "Group Id",
            "type": "string"
          },
          "members": {
            "description": "List of user sys_ids or usernames to add as members",
            "items": {
              "type": "string"
            },
            "title": "Members",
            "type": "array"
          }
        },
        "required": [
          "group_id",
          "members"
        ],
        "title": "AddGroupMembersParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 2,
        "required_parameters": [
          "group_id",
          "members"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "group_id": "string",
          "members": "array"
        },
        "has_description": true,
        "complexity_score": 4
      }
    },
    {
      "name": "remove_group_members",
      "description": "Remove members from an existing group in ServiceNow",
      "inputSchema": {
        "description": "Parameters for removing members from a group.",
        "properties": {
          "group_id": {
            "description": "Group ID or sys_id",
            "title": "Group Id",
            "type": "string"
          },
          "members": {
            "description": "List of user sys_ids or usernames to remove as members. sys_id prefix must be included if providing user sys_id. Example: ['sys_id:49339c38530360100999ddeeff7b1242']",
            "items": {
              "type": "string"
            },
            "title": "Members",
            "type": "array"
          }
        },
        "required": [
          "group_id",
          "members"
        ],
        "title": "RemoveGroupMembersParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 2,
        "required_parameters": [
          "group_id",
          "members"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "group_id": "string",
          "members": "array"
        },
        "has_description": true,
        "complexity_score": 4
      }
    },
    {
      "name": "list_groups",
      "description": "List groups from ServiceNow with optional filtering",
      "inputSchema": {
        "description": "Parameters for listing groups.",
        "properties": {
          "limit": {
            "default": 10,
            "description": "Maximum number of groups to return",
            "title": "Limit",
            "type": "integer"
          },
          "offset": {
            "default": 0,
            "description": "Offset for pagination",
            "title": "Offset",
            "type": "integer"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by active status",
            "title": "Active"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Case-insensitive search term that matches against group name or description fields. Uses ServiceNow's LIKE operator for partial matching.",
            "title": "Query"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by group type",
            "title": "Type"
          }
        },
        "title": "ListGroupsParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 5,
        "required_parameters": [],
        "optional_parameters": [
          "limit",
          "offset",
          "active",
          "query",
          "type"
        ],
        "parameter_types": {
          "limit": "integer",
          "offset": "integer",
          "active": "unknown",
          "query": "unknown",
          "type": "unknown"
        },
        "has_description": true,
        "complexity_score": 5
      }
    },
    {
      "name": "create_story",
      "description": "Create a new story in ServiceNow",
      "inputSchema": {
        "description": "Parameters for creating a story.",
        "properties": {
          "short_description": {
            "description": "Short description of the story",
            "title": "Short Description",
            "type": "string"
          },
          "acceptance_criteria": {
            "description": "Acceptance criteria for the story",
            "title": "Acceptance Criteria",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Detailed description of the story",
            "title": "Description"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "State of story (-6 is Draft,-7 is Ready for Testing,-8 is Testing,1 is Ready, 2 is Work in progress, 3 is Complete, 4 is Cancelled)",
            "title": "State"
          },
          "assignment_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Group assigned to the story",
            "title": "Assignment Group"
          },
          "story_points": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 10,
            "description": "Points value for the story",
            "title": "Story Points"
          },
          "assigned_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "User assigned to the story",
            "title": "Assigned To"
          },
          "epic": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Epic that the story belongs to. It requires the System ID of the epic.",
            "title": "Epic"
          },
          "project": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Project that the story belongs to. It requires the System ID of the project.",
            "title": "Project"
          },
          "work_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Work notes to add to the story. Used for adding notes and comments to a story",
            "title": "Work Notes"
          }
        },
        "required": [
          "short_description",
          "acceptance_criteria"
        ],
        "title": "CreateStoryParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 10,
        "required_parameters": [
          "short_description",
          "acceptance_criteria"
        ],
        "optional_parameters": [
          "description",
          "state",
          "assignment_group",
          "story_points",
          "assigned_to",
          "epic",
          "project",
          "work_notes"
        ],
        "parameter_types": {
          "short_description": "string",
          "acceptance_criteria": "string",
          "description": "unknown",
          "state": "unknown",
          "assignment_group": "unknown",
          "story_points": "unknown",
          "assigned_to": "unknown",
          "epic": "unknown",
          "project": "unknown",
          "work_notes": "unknown"
        },
        "has_description": true,
        "complexity_score": 12
      }
    },
    {
      "name": "update_story",
      "description": "Update an existing story in ServiceNow",
      "inputSchema": {
        "description": "Parameters for updating a story.",
        "properties": {
          "story_id": {
            "description": "Story IDNumber or sys_id. You will need to fetch the story to get the sys_id if you only have the story number",
            "title": "Story Id",
            "type": "string"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Short description of the story",
            "title": "Short Description"
          },
          "acceptance_criteria": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Acceptance criteria for the story",
            "title": "Acceptance Criteria"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Detailed description of the story",
            "title": "Description"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "State of story (-6 is Draft,-7 is Ready for Testing,-8 is Testing,1 is Ready, 2 is Work in progress, 3 is Complete, 4 is Cancelled)",
            "title": "State"
          },
          "assignment_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Group assigned to the story",
            "title": "Assignment Group"
          },
          "story_points": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Points value for the story",
            "title": "Story Points"
          },
          "assigned_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "User assigned to the story",
            "title": "Assigned To"
          },
          "epic": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Epic that the story belongs to. It requires the System ID of the epic.",
            "title": "Epic"
          },
          "project": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Project that the story belongs to. It requires the System ID of the project.",
            "title": "Project"
          },
          "work_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Work notes to add to the story. Used for adding notes and comments to a story",
            "title": "Work Notes"
          }
        },
        "required": [
          "story_id"
        ],
        "title": "UpdateStoryParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 11,
        "required_parameters": [
          "story_id"
        ],
        "optional_parameters": [
          "short_description",
          "acceptance_criteria",
          "description",
          "state",
          "assignment_group",
          "story_points",
          "assigned_to",
          "epic",
          "project",
          "work_notes"
        ],
        "parameter_types": {
          "story_id": "string",
          "short_description": "unknown",
          "acceptance_criteria": "unknown",
          "description": "unknown",
          "state": "unknown",
          "assignment_group": "unknown",
          "story_points": "unknown",
          "assigned_to": "unknown",
          "epic": "unknown",
          "project": "unknown",
          "work_notes": "unknown"
        },
        "has_description": true,
        "complexity_score": 12
      }
    },
    {
      "name": "list_stories",
      "description": "List stories from ServiceNow",
      "inputSchema": {
        "description": "Parameters for listing stories.",
        "properties": {
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 10,
            "description": "Maximum number of records to return",
            "title": "Limit"
          },
          "offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 0,
            "description": "Offset to start from",
            "title": "Offset"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by state",
            "title": "State"
          },
          "assignment_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by assignment group",
            "title": "Assignment Group"
          },
          "timeframe": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by timeframe (upcoming, in-progress, completed)",
            "title": "Timeframe"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Additional query string",
            "title": "Query"
          }
        },
        "title": "ListStoriesParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 6,
        "required_parameters": [],
        "optional_parameters": [
          "limit",
          "offset",
          "state",
          "assignment_group",
          "timeframe",
          "query"
        ],
        "parameter_types": {
          "limit": "unknown",
          "offset": "unknown",
          "state": "unknown",
          "assignment_group": "unknown",
          "timeframe": "unknown",
          "query": "unknown"
        },
        "has_description": true,
        "complexity_score": 6
      }
    },
    {
      "name": "list_story_dependencies",
      "description": "List story dependencies from ServiceNow",
      "inputSchema": {
        "description": "Parameters for listing story dependencies.",
        "properties": {
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 10,
            "description": "Maximum number of records to return",
            "title": "Limit"
          },
          "offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 0,
            "description": "Offset to start from",
            "title": "Offset"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Additional query string",
            "title": "Query"
          },
          "dependent_story": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Sys_id of the dependent story is required",
            "title": "Dependent Story"
          },
          "prerequisite_story": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Sys_id that this story depends on is required",
            "title": "Prerequisite Story"
          }
        },
        "title": "ListStoryDependenciesParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 5,
        "required_parameters": [],
        "optional_parameters": [
          "limit",
          "offset",
          "query",
          "dependent_story",
          "prerequisite_story"
        ],
        "parameter_types": {
          "limit": "unknown",
          "offset": "unknown",
          "query": "unknown",
          "dependent_story": "unknown",
          "prerequisite_story": "unknown"
        },
        "has_description": true,
        "complexity_score": 5
      }
    },
    {
      "name": "create_story_dependency",
      "description": "Create a dependency between two stories in ServiceNow",
      "inputSchema": {
        "description": "Parameters for creating a story dependency.",
        "properties": {
          "dependent_story": {
            "description": "Sys_id of the dependent story is required",
            "title": "Dependent Story",
            "type": "string"
          },
          "prerequisite_story": {
            "description": "Sys_id that this story depends on is required",
            "title": "Prerequisite Story",
            "type": "string"
          }
        },
        "required": [
          "dependent_story",
          "prerequisite_story"
        ],
        "title": "CreateStoryDependencyParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 2,
        "required_parameters": [
          "dependent_story",
          "prerequisite_story"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "dependent_story": "string",
          "prerequisite_story": "string"
        },
        "has_description": true,
        "complexity_score": 4
      }
    },
    {
      "name": "delete_story_dependency",
      "description": "Delete a story dependency in ServiceNow",
      "inputSchema": {
        "description": "Parameters for deleting a story dependency.",
        "properties": {
          "dependency_id": {
            "description": "Sys_id of the dependency is required",
            "title": "Dependency Id",
            "type": "string"
          }
        },
        "required": [
          "dependency_id"
        ],
        "title": "DeleteStoryDependencyParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 1,
        "required_parameters": [
          "dependency_id"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "dependency_id": "string"
        },
        "has_description": true,
        "complexity_score": 2
      }
    },
    {
      "name": "create_epic",
      "description": "Create a new epic in ServiceNow",
      "inputSchema": {
        "description": "Parameters for creating an epic.",
        "properties": {
          "short_description": {
            "description": "Short description of the epic",
            "title": "Short Description",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Detailed description of the epic",
            "title": "Description"
          },
          "priority": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Priority of epic (1 is Critical, 2 is High, 3 is Moderate, 4 is Low, 5 is Planning)",
            "title": "Priority"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "State of story (-6 is Draft,1 is Ready,2 is Work in progress, 3 is Complete, 4 is Cancelled)",
            "title": "State"
          },
          "assignment_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Group assigned to the epic",
            "title": "Assignment Group"
          },
          "assigned_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "User assigned to the epic",
            "title": "Assigned To"
          },
          "work_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Work notes to add to the epic. Used for adding notes and comments to an epic",
            "title": "Work Notes"
          }
        },
        "required": [
          "short_description"
        ],
        "title": "CreateEpicParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 7,
        "required_parameters": [
          "short_description"
        ],
        "optional_parameters": [
          "description",
          "priority",
          "state",
          "assignment_group",
          "assigned_to",
          "work_notes"
        ],
        "parameter_types": {
          "short_description": "string",
          "description": "unknown",
          "priority": "unknown",
          "state": "unknown",
          "assignment_group": "unknown",
          "assigned_to": "unknown",
          "work_notes": "unknown"
        },
        "has_description": true,
        "complexity_score": 8
      }
    },
    {
      "name": "update_epic",
      "description": "Update an existing epic in ServiceNow",
      "inputSchema": {
        "description": "Parameters for updating an epic.",
        "properties": {
          "epic_id": {
            "description": "Epic ID or sys_id",
            "title": "Epic Id",
            "type": "string"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Short description of the epic",
            "title": "Short Description"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Detailed description of the epic",
            "title": "Description"
          },
          "priority": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Priority of epic (1 is Critical, 2 is High, 3 is Moderate, 4 is Low, 5 is Planning)",
            "title": "Priority"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "State of story (-6 is Draft,1 is Ready,2 is Work in progress, 3 is Complete, 4 is Cancelled)",
            "title": "State"
          },
          "assignment_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Group assigned to the epic",
            "title": "Assignment Group"
          },
          "assigned_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "User assigned to the epic",
            "title": "Assigned To"
          },
          "work_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Work notes to add to the epic. Used for adding notes and comments to an epic",
            "title": "Work Notes"
          }
        },
        "required": [
          "epic_id"
        ],
        "title": "UpdateEpicParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 8,
        "required_parameters": [
          "epic_id"
        ],
        "optional_parameters": [
          "short_description",
          "description",
          "priority",
          "state",
          "assignment_group",
          "assigned_to",
          "work_notes"
        ],
        "parameter_types": {
          "epic_id": "string",
          "short_description": "unknown",
          "description": "unknown",
          "priority": "unknown",
          "state": "unknown",
          "assignment_group": "unknown",
          "assigned_to": "unknown",
          "work_notes": "unknown"
        },
        "has_description": true,
        "complexity_score": 9
      }
    },
    {
      "name": "list_epics",
      "description": "List epics from ServiceNow",
      "inputSchema": {
        "description": "Parameters for listing epics.",
        "properties": {
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 10,
            "description": "Maximum number of records to return",
            "title": "Limit"
          },
          "offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 0,
            "description": "Offset to start from",
            "title": "Offset"
          },
          "priority": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by priority",
            "title": "Priority"
          },
          "assignment_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by assignment group",
            "title": "Assignment Group"
          },
          "timeframe": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by timeframe (upcoming, in-progress, completed)",
            "title": "Timeframe"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Additional query string",
            "title": "Query"
          }
        },
        "title": "ListEpicsParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 6,
        "required_parameters": [],
        "optional_parameters": [
          "limit",
          "offset",
          "priority",
          "assignment_group",
          "timeframe",
          "query"
        ],
        "parameter_types": {
          "limit": "unknown",
          "offset": "unknown",
          "priority": "unknown",
          "assignment_group": "unknown",
          "timeframe": "unknown",
          "query": "unknown"
        },
        "has_description": true,
        "complexity_score": 6
      }
    },
    {
      "name": "create_scrum_task",
      "description": "Create a new scrum task in ServiceNow",
      "inputSchema": {
        "description": "Parameters for creating a scrum task.",
        "properties": {
          "story": {
            "description": "Short description of the story. It requires the System ID of the story.",
            "title": "Story",
            "type": "string"
          },
          "short_description": {
            "description": "Short description of the scrum task",
            "title": "Short Description",
            "type": "string"
          },
          "priority": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Priority of scrum task (1 is Critical, 2 is High, 3 is Moderate, 4 is Low)",
            "title": "Priority"
          },
          "planned_hours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Planned hours for the scrum task",
            "title": "Planned Hours"
          },
          "remaining_hours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Remaining hours for the scrum task",
            "title": "Remaining Hours"
          },
          "hours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Actual Hours for the scrum task",
            "title": "Hours"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Detailed description of the scrum task",
            "title": "Description"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Type of scrum task (1 is Analysis, 2 is Coding, 3 is Documentation, 4 is Testing)",
            "title": "Type"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "State of scrum task (-6 is Draft,1 is Ready, 2 is Work in progress, 3 is Complete, 4 is Cancelled)",
            "title": "State"
          },
          "assignment_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Group assigned to the scrum task",
            "title": "Assignment Group"
          },
          "assigned_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "User assigned to the scrum task",
            "title": "Assigned To"
          },
          "work_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Work notes to add to the scrum task",
            "title": "Work Notes"
          }
        },
        "required": [
          "story",
          "short_description"
        ],
        "title": "CreateScrumTaskParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 12,
        "required_parameters": [
          "story",
          "short_description"
        ],
        "optional_parameters": [
          "priority",
          "planned_hours",
          "remaining_hours",
          "hours",
          "description",
          "type",
          "state",
          "assignment_group",
          "assigned_to",
          "work_notes"
        ],
        "parameter_types": {
          "story": "string",
          "short_description": "string",
          "priority": "unknown",
          "planned_hours": "unknown",
          "remaining_hours": "unknown",
          "hours": "unknown",
          "description": "unknown",
          "type": "unknown",
          "state": "unknown",
          "assignment_group": "unknown",
          "assigned_to": "unknown",
          "work_notes": "unknown"
        },
        "has_description": true,
        "complexity_score": 14
      }
    },
    {
      "name": "update_scrum_task",
      "description": "Update an existing scrum task in ServiceNow",
      "inputSchema": {
        "description": "Parameters for updating a scrum task.",
        "properties": {
          "scrum_task_id": {
            "description": "Scrum Task ID or sys_id",
            "title": "Scrum Task Id",
            "type": "string"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Short description of the scrum task",
            "title": "Short Description"
          },
          "priority": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Priority of scrum task (1 is Critical, 2 is High, 3 is Moderate, 4 is Low)",
            "title": "Priority"
          },
          "planned_hours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Planned hours for the scrum task",
            "title": "Planned Hours"
          },
          "remaining_hours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Remaining hours for the scrum task",
            "title": "Remaining Hours"
          },
          "hours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Actual Hours for the scrum task",
            "title": "Hours"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Detailed description of the scrum task",
            "title": "Description"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Type of scrum task (1 is Analysis, 2 is Coding, 3 is Documentation, 4 is Testing)",
            "title": "Type"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "State of scrum task (-6 is Draft,1 is Ready, 2 is Work in progress, 3 is Complete, 4 is Cancelled)",
            "title": "State"
          },
          "assignment_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Group assigned to the scrum task",
            "title": "Assignment Group"
          },
          "assigned_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "User assigned to the scrum task",
            "title": "Assigned To"
          },
          "work_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Work notes to add to the scrum task",
            "title": "Work Notes"
          }
        },
        "required": [
          "scrum_task_id"
        ],
        "title": "UpdateScrumTaskParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 12,
        "required_parameters": [
          "scrum_task_id"
        ],
        "optional_parameters": [
          "short_description",
          "priority",
          "planned_hours",
          "remaining_hours",
          "hours",
          "description",
          "type",
          "state",
          "assignment_group",
          "assigned_to",
          "work_notes"
        ],
        "parameter_types": {
          "scrum_task_id": "string",
          "short_description": "unknown",
          "priority": "unknown",
          "planned_hours": "unknown",
          "remaining_hours": "unknown",
          "hours": "unknown",
          "description": "unknown",
          "type": "unknown",
          "state": "unknown",
          "assignment_group": "unknown",
          "assigned_to": "unknown",
          "work_notes": "unknown"
        },
        "has_description": true,
        "complexity_score": 13
      }
    },
    {
      "name": "list_scrum_tasks",
      "description": "List scrum tasks from ServiceNow",
      "inputSchema": {
        "description": "Parameters for listing scrum tasks.",
        "properties": {
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 10,
            "description": "Maximum number of records to return",
            "title": "Limit"
          },
          "offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 0,
            "description": "Offset to start from",
            "title": "Offset"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by state",
            "title": "State"
          },
          "assignment_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by assignment group",
            "title": "Assignment Group"
          },
          "timeframe": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by timeframe (upcoming, in-progress, completed)",
            "title": "Timeframe"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Additional query string",
            "title": "Query"
          }
        },
        "title": "ListScrumTasksParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 6,
        "required_parameters": [],
        "optional_parameters": [
          "limit",
          "offset",
          "state",
          "assignment_group",
          "timeframe",
          "query"
        ],
        "parameter_types": {
          "limit": "unknown",
          "offset": "unknown",
          "state": "unknown",
          "assignment_group": "unknown",
          "timeframe": "unknown",
          "query": "unknown"
        },
        "has_description": true,
        "complexity_score": 6
      }
    },
    {
      "name": "create_project",
      "description": "Create a new project in ServiceNow",
      "inputSchema": {
        "description": "Parameters for creating a project.",
        "properties": {
          "short_description": {
            "description": "Project name of the project",
            "title": "Short Description",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Detailed description of the project",
            "title": "Description"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Status of the project (green, yellow, red)",
            "title": "Status"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "State of project (-5 is Pending,1 is Open, 2 is Work in progress, 3 is Closed Complete, 4 is Closed Incomplete, 5 is Closed Skipped)",
            "title": "State"
          },
          "project_manager": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Project manager for the project",
            "title": "Project Manager"
          },
          "percentage_complete": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Percentage complete for the project",
            "title": "Percentage Complete"
          },
          "assignment_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Group assigned to the project",
            "title": "Assignment Group"
          },
          "assigned_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "User assigned to the project",
            "title": "Assigned To"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Start date for the project",
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "End date for the project",
            "title": "End Date"
          }
        },
        "required": [
          "short_description"
        ],
        "title": "CreateProjectParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 10,
        "required_parameters": [
          "short_description"
        ],
        "optional_parameters": [
          "description",
          "status",
          "state",
          "project_manager",
          "percentage_complete",
          "assignment_group",
          "assigned_to",
          "start_date",
          "end_date"
        ],
        "parameter_types": {
          "short_description": "string",
          "description": "unknown",
          "status": "unknown",
          "state": "unknown",
          "project_manager": "unknown",
          "percentage_complete": "unknown",
          "assignment_group": "unknown",
          "assigned_to": "unknown",
          "start_date": "unknown",
          "end_date": "unknown"
        },
        "has_description": true,
        "complexity_score": 11
      }
    },
    {
      "name": "update_project",
      "description": "Update an existing project in ServiceNow",
      "inputSchema": {
        "description": "Parameters for updating a project.",
        "properties": {
          "project_id": {
            "description": "Project ID or sys_id",
            "title": "Project Id",
            "type": "string"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Project name of the project",
            "title": "Short Description"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Detailed description of the project",
            "title": "Description"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Status of the project (green, yellow, red)",
            "title": "Status"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "State of project (-5 is Pending,1 is Open, 2 is Work in progress, 3 is Closed Complete, 4 is Closed Incomplete, 5 is Closed Skipped)",
            "title": "State"
          },
          "project_manager": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Project manager for the project",
            "title": "Project Manager"
          },
          "percentage_complete": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Percentage complete for the project",
            "title": "Percentage Complete"
          },
          "assignment_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Group assigned to the project",
            "title": "Assignment Group"
          },
          "assigned_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "User assigned to the project",
            "title": "Assigned To"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Start date for the project",
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "End date for the project",
            "title": "End Date"
          }
        },
        "required": [
          "project_id"
        ],
        "title": "UpdateProjectParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 11,
        "required_parameters": [
          "project_id"
        ],
        "optional_parameters": [
          "short_description",
          "description",
          "status",
          "state",
          "project_manager",
          "percentage_complete",
          "assignment_group",
          "assigned_to",
          "start_date",
          "end_date"
        ],
        "parameter_types": {
          "project_id": "string",
          "short_description": "unknown",
          "description": "unknown",
          "status": "unknown",
          "state": "unknown",
          "project_manager": "unknown",
          "percentage_complete": "unknown",
          "assignment_group": "unknown",
          "assigned_to": "unknown",
          "start_date": "unknown",
          "end_date": "unknown"
        },
        "has_description": true,
        "complexity_score": 12
      }
    },
    {
      "name": "list_projects",
      "description": "List projects from ServiceNow",
      "inputSchema": {
        "description": "Parameters for listing projects.",
        "properties": {
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 10,
            "description": "Maximum number of records to return",
            "title": "Limit"
          },
          "offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 0,
            "description": "Offset to start from",
            "title": "Offset"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by state",
            "title": "State"
          },
          "assignment_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by assignment group",
            "title": "Assignment Group"
          },
          "timeframe": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by timeframe (upcoming, in-progress, completed)",
            "title": "Timeframe"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Additional query string",
            "title": "Query"
          }
        },
        "title": "ListProjectsParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 6,
        "required_parameters": [],
        "optional_parameters": [
          "limit",
          "offset",
          "state",
          "assignment_group",
          "timeframe",
          "query"
        ],
        "parameter_types": {
          "limit": "unknown",
          "offset": "unknown",
          "state": "unknown",
          "assignment_group": "unknown",
          "timeframe": "unknown",
          "query": "unknown"
        },
        "has_description": true,
        "complexity_score": 6
      }
    },
    {
      "name": "create_asset",
      "description": "Create a new asset in ServiceNow",
      "inputSchema": {
        "description": "Parameters for creating an asset.",
        "properties": {
          "asset_tag": {
            "description": "Unique asset tag identifier",
            "title": "Asset Tag",
            "type": "string"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Model number or name",
            "title": "Model"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Serial number of the asset",
            "title": "Serial Number"
          },
          "assigned_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "User assigned to the asset (sys_id)",
            "title": "Assigned To"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Location of the asset",
            "title": "Location"
          },
          "cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Cost of the asset",
            "title": "Cost"
          },
          "purchase_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Purchase date (YYYY-MM-DD)",
            "title": "Purchase Date"
          },
          "warranty_expiration": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Warranty expiration date (YYYY-MM-DD)",
            "title": "Warranty Expiration"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Asset category",
            "title": "Category"
          },
          "subcategory": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Asset subcategory",
            "title": "Subcategory"
          },
          "manufacturer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Manufacturer of the asset",
            "title": "Manufacturer"
          },
          "model_category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Model category sys_id",
            "title": "Model Category"
          },
          "install_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "1",
            "description": "Installation status of the asset (1=In use, 2=On Order, 3=In Maintenance, 6=In stock, 7=Retired, 8=Missing, 9=In Transit, 10=Consumed,11=Build, .)",
            "title": "Install Status"
          },
          "substatus": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Substatus of the asset",
            "title": "Substatus"
          },
          "comments": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Comments about the asset",
            "title": "Comments"
          }
        },
        "required": [
          "asset_tag"
        ],
        "title": "CreateAssetParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 15,
        "required_parameters": [
          "asset_tag"
        ],
        "optional_parameters": [
          "model",
          "serial_number",
          "assigned_to",
          "location",
          "cost",
          "purchase_date",
          "warranty_expiration",
          "category",
          "subcategory",
          "manufacturer",
          "model_category",
          "install_status",
          "substatus",
          "comments"
        ],
        "parameter_types": {
          "asset_tag": "string",
          "model": "unknown",
          "serial_number": "unknown",
          "assigned_to": "unknown",
          "location": "unknown",
          "cost": "unknown",
          "purchase_date": "unknown",
          "warranty_expiration": "unknown",
          "category": "unknown",
          "subcategory": "unknown",
          "manufacturer": "unknown",
          "model_category": "unknown",
          "install_status": "unknown",
          "substatus": "unknown",
          "comments": "unknown"
        },
        "has_description": true,
        "complexity_score": 16
      }
    },
    {
      "name": "update_asset",
      "description": "Update an existing asset in ServiceNow",
      "inputSchema": {
        "description": "Parameters for updating an asset.",
        "properties": {
          "asset_id": {
            "description": "Asset ID (sys_id) or asset tag",
            "title": "Asset Id",
            "type": "string"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Display name of the asset",
            "title": "Display Name"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Model number or name",
            "title": "Model"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Serial number of the asset",
            "title": "Serial Number"
          },
          "assigned_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "User assigned to the asset (sys_id)",
            "title": "Assigned To"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Location of the asset",
            "title": "Location"
          },
          "cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Cost of the asset",
            "title": "Cost"
          },
          "purchase_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Purchase date (YYYY-MM-DD)",
            "title": "Purchase Date"
          },
          "warranty_expiration": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Warranty expiration date (YYYY-MM-DD)",
            "title": "Warranty Expiration"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Asset category",
            "title": "Category"
          },
          "subcategory": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Asset subcategory",
            "title": "Subcategory"
          },
          "manufacturer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Manufacturer of the asset",
            "title": "Manufacturer"
          },
          "model_category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Model category sys_id",
            "title": "Model Category"
          },
          "install_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Installation status of the asset (1=In use, 2=On Order, 3=In Maintenance, 6=In stock, 7=Retired, 8=Missing, 9=In Transit, 10=Consumed,11=Build, .)",
            "title": "Install Status"
          },
          "substatus": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Substatus of the asset",
            "title": "Substatus"
          },
          "comments": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Comments about the asset",
            "title": "Comments"
          }
        },
        "required": [
          "asset_id"
        ],
        "title": "UpdateAssetParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 16,
        "required_parameters": [
          "asset_id"
        ],
        "optional_parameters": [
          "display_name",
          "model",
          "serial_number",
          "assigned_to",
          "location",
          "cost",
          "purchase_date",
          "warranty_expiration",
          "category",
          "subcategory",
          "manufacturer",
          "model_category",
          "install_status",
          "substatus",
          "comments"
        ],
        "parameter_types": {
          "asset_id": "string",
          "display_name": "unknown",
          "model": "unknown",
          "serial_number": "unknown",
          "assigned_to": "unknown",
          "location": "unknown",
          "cost": "unknown",
          "purchase_date": "unknown",
          "warranty_expiration": "unknown",
          "category": "unknown",
          "subcategory": "unknown",
          "manufacturer": "unknown",
          "model_category": "unknown",
          "install_status": "unknown",
          "substatus": "unknown",
          "comments": "unknown"
        },
        "has_description": true,
        "complexity_score": 17
      }
    },
    {
      "name": "get_assets",
      "description": "Get, list, or search for assets in ServiceNow. Supports single asset lookup by ID/tag/serial, filtering by user/location, and searching by name or general query.",
      "inputSchema": {
        "description": "Unified parameters for getting, listing, and searching assets.",
        "properties": {
          "limit": {
            "default": 10,
            "description": "Maximum number of assets to return",
            "title": "Limit",
            "type": "integer"
          },
          "offset": {
            "default": 0,
            "description": "Offset for pagination",
            "title": "Offset",
            "type": "integer"
          },
          "asset_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Asset ID (sys_id) - returns single asset if specified",
            "title": "Asset Id"
          },
          "asset_tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Asset tag - returns single asset if specified",
            "title": "Asset Tag"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Serial number - returns single asset if specified",
            "title": "Serial Number"
          },
          "assigned_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "User sys_id or name that the asset is assigned to",
            "title": "Assigned To"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by location",
            "title": "Location"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Search for assets by display name using LIKE matching",
            "title": "Name"
          },
          "exact_match": {
            "default": false,
            "description": "Whether to perform exact match instead of LIKE matching for name search",
            "title": "Exact Match",
            "type": "boolean"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Search term that matches against asset tag, display name, serial number, or model",
            "title": "Query"
          }
        },
        "title": "GetAssetsParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 10,
        "required_parameters": [],
        "optional_parameters": [
          "limit",
          "offset",
          "asset_id",
          "asset_tag",
          "serial_number",
          "assigned_to",
          "location",
          "name",
          "exact_match",
          "query"
        ],
        "parameter_types": {
          "limit": "integer",
          "offset": "integer",
          "asset_id": "unknown",
          "asset_tag": "unknown",
          "serial_number": "unknown",
          "assigned_to": "unknown",
          "location": "unknown",
          "name": "unknown",
          "exact_match": "boolean",
          "query": "unknown"
        },
        "has_description": true,
        "complexity_score": 10
      }
    },
    {
      "name": "delete_asset",
      "description": "Delete an asset from ServiceNow",
      "inputSchema": {
        "description": "Parameters for deleting an asset.",
        "properties": {
          "asset_id": {
            "description": "Asset ID (sys_id) or asset tag",
            "title": "Asset Id",
            "type": "string"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Reason for deleting the asset",
            "title": "Reason"
          }
        },
        "required": [
          "asset_id"
        ],
        "title": "DeleteAssetParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 2,
        "required_parameters": [
          "asset_id"
        ],
        "optional_parameters": [
          "reason"
        ],
        "parameter_types": {
          "asset_id": "string",
          "reason": "unknown"
        },
        "has_description": true,
        "complexity_score": 3
      }
    },
    {
      "name": "transfer_asset",
      "description": "Transfer an asset to a different user in ServiceNow",
      "inputSchema": {
        "description": "Parameters for transferring an asset to a different user.",
        "properties": {
          "asset_id": {
            "description": "Asset ID (sys_id) or asset tag",
            "title": "Asset Id",
            "type": "string"
          },
          "new_assigned_to": {
            "description": "New user to assign the asset to (sys_id)",
            "title": "New Assigned To",
            "type": "string"
          },
          "transfer_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Reason for the transfer",
            "title": "Transfer Reason"
          },
          "comments": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Additional comments about the transfer",
            "title": "Comments"
          }
        },
        "required": [
          "asset_id",
          "new_assigned_to"
        ],
        "title": "TransferAssetParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 4,
        "required_parameters": [
          "asset_id",
          "new_assigned_to"
        ],
        "optional_parameters": [
          "transfer_reason",
          "comments"
        ],
        "parameter_types": {
          "asset_id": "string",
          "new_assigned_to": "string",
          "transfer_reason": "unknown",
          "comments": "unknown"
        },
        "has_description": true,
        "complexity_score": 6
      }
    },
    {
      "name": "create_problem",
      "description": "Create a new problem in ServiceNow",
      "inputSchema": {
        "description": "Parameters for creating a problem.",
        "properties": {
          "short_description": {
            "description": "Short description of the problem",
            "title": "Short Description",
            "type": "string"
          },
          "urgency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "3",
            "description": "Urgency level (1=High, 2=Medium, 3=Low)",
            "title": "Urgency"
          },
          "impact": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "3",
            "description": "Impact level (1=High, 2=Medium, 3=Low)",
            "title": "Impact"
          },
          "assigned_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "User assigned to the problem (user sys_id or username)",
            "title": "Assigned To"
          },
          "fields": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Dictionary of other field names and corresponding values to set for the POST request. Example: {'priority': '1'}",
            "title": "Fields"
          }
        },
        "required": [
          "short_description"
        ],
        "title": "CreateProblemParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 5,
        "required_parameters": [
          "short_description"
        ],
        "optional_parameters": [
          "urgency",
          "impact",
          "assigned_to",
          "fields"
        ],
        "parameter_types": {
          "short_description": "string",
          "urgency": "unknown",
          "impact": "unknown",
          "assigned_to": "unknown",
          "fields": "unknown"
        },
        "has_description": true,
        "complexity_score": 6
      }
    },
    {
      "name": "list_hardware_assets",
      "description": "List hardware assets from ServiceNow",
      "inputSchema": {
        "description": "Parameters for listing hardware assets.",
        "properties": {
          "limit": {
            "default": 10,
            "description": "Maximum number of assets to return",
            "title": "Limit",
            "type": "integer"
          },
          "offset": {
            "default": 0,
            "description": "Offset for pagination",
            "title": "Offset",
            "type": "integer"
          },
          "assigned_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by assigned user (sys_id)",
            "title": "Assigned To"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Search for hardware assets by display name using LIKE matching",
            "title": "Name"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Search term that matches against asset tag, display name, serial number, or model",
            "title": "Query"
          }
        },
        "title": "ListHardwareAssetsParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 5,
        "required_parameters": [],
        "optional_parameters": [
          "limit",
          "offset",
          "assigned_to",
          "name",
          "query"
        ],
        "parameter_types": {
          "limit": "integer",
          "offset": "integer",
          "assigned_to": "unknown",
          "name": "unknown",
          "query": "unknown"
        },
        "has_description": true,
        "complexity_score": 5
      }
    },
    {
      "name": "create_hardware_asset",
      "description": "Create a new hardware asset in ServiceNow",
      "inputSchema": {
        "description": "Parameters for creating a hardware asset. Display name is automatically generated by merging model and asset tag.",
        "properties": {
          "asset_tag": {
            "description": "Asset tag of the hardware asset",
            "title": "Asset Tag",
            "type": "string"
          },
          "model": {
            "description": "Model of the hardware asset",
            "title": "Model",
            "type": "string"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "State of the hardware asset. 1 -> In Use 2 -> On Order 3 -> In Maintenance 6 -> In Stock 7 -> Retired 8 -> Missing 9 -> In Transit 10 -> Consumed 11 -> Build ",
            "title": "State"
          },
          "model_category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Model category of the hardware asset",
            "title": "Model Category"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Serial number of the hardware asset",
            "title": "Serial Number"
          },
          "vendor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Vendor of the hardware asset",
            "title": "Vendor"
          },
          "fields": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Dictionary of other field names and corresponding values to set for the hardware asset. Example: {'priority': '1'}",
            "title": "Fields"
          },
          "cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Cost of the hardware asset",
            "title": "Cost"
          },
          "assigned_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "User assigned to the hardware asset (sys_id)",
            "title": "Assigned To"
          }
        },
        "required": [
          "asset_tag",
          "model"
        ],
        "title": "CreateHardwareAssetParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 9,
        "required_parameters": [
          "asset_tag",
          "model"
        ],
        "optional_parameters": [
          "state",
          "model_category",
          "serial_number",
          "vendor",
          "fields",
          "cost",
          "assigned_to"
        ],
        "parameter_types": {
          "asset_tag": "string",
          "model": "string",
          "state": "unknown",
          "model_category": "unknown",
          "serial_number": "unknown",
          "vendor": "unknown",
          "fields": "unknown",
          "cost": "unknown",
          "assigned_to": "unknown"
        },
        "has_description": true,
        "complexity_score": 11
      }
    },
    {
      "name": "update_hardware_asset",
      "description": "Update an existing hardware asset in ServiceNow",
      "inputSchema": {
        "description": "Parameters for updating a hardware asset.",
        "properties": {
          "asset_id": {
            "description": "Asset ID (sys_id) or asset tag",
            "title": "Asset Id",
            "type": "string"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "State of the hardware asset. 1 -> In Use 2 -> On Order 3 -> In Maintenance 6 -> In Stock 7 -> Retired 8 -> Missing 9 -> In Transit 10 -> Consumed 11 -> Build ",
            "title": "State"
          },
          "model_category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Model category of the hardware asset",
            "title": "Model Category"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Serial number of the hardware asset",
            "title": "Serial Number"
          },
          "vendor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Vendor of the hardware asset",
            "title": "Vendor"
          },
          "fields": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Dictionary of other field names and corresponding values to set for the hardware asset. Example: {'priority': '1'}",
            "title": "Fields"
          },
          "cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Cost of the hardware asset",
            "title": "Cost"
          },
          "assigned_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "User assigned to the hardware asset (sys_id)",
            "title": "Assigned To"
          }
        },
        "required": [
          "asset_id"
        ],
        "title": "UpdateHardwareAssetParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 8,
        "required_parameters": [
          "asset_id"
        ],
        "optional_parameters": [
          "state",
          "model_category",
          "serial_number",
          "vendor",
          "fields",
          "cost",
          "assigned_to"
        ],
        "parameter_types": {
          "asset_id": "string",
          "state": "unknown",
          "model_category": "unknown",
          "serial_number": "unknown",
          "vendor": "unknown",
          "fields": "unknown",
          "cost": "unknown",
          "assigned_to": "unknown"
        },
        "has_description": true,
        "complexity_score": 9
      }
    },
    {
      "name": "create_item_request",
      "description": "Create a new item request in ServiceNow. This is used to create a request for a specific item. You can link multiple item requests to a single request object.",
      "inputSchema": {
        "description": "Parameters for creating an item request. This is used to create a request for a specific item. You can link multiple item requests to a single request object.",
        "properties": {
          "number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Requested item number identifier",
            "title": "Number"
          },
          "cat_item": {
            "description": "The item name or to be requested",
            "title": "Cat Item",
            "type": "string"
          },
          "requested_for": {
            "description": "The user for which the item is being requested. You can input either sys_id or name of user",
            "title": "Requested For",
            "type": "string"
          },
          "quantity": {
            "default": "1",
            "description": "The quantity of the item to be requested",
            "title": "Quantity",
            "type": "string"
          },
          "request": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "The sys_id of the request object this item request belongs to",
            "title": "Request"
          },
          "state": {
            "description": "The state number of the item request. 1 = New, 2 = In Progress, 3 = Resolved, 6 = Resolved, 7 = Closed, 8 = Cancelled",
            "title": "State",
            "type": "string"
          },
          "short_description": {
            "description": "The short description of the item request",
            "title": "Short Description",
            "type": "string"
          }
        },
        "required": [
          "cat_item",
          "requested_for",
          "state",
          "short_description"
        ],
        "title": "CreateItemRequestParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 7,
        "required_parameters": [
          "cat_item",
          "requested_for",
          "state",
          "short_description"
        ],
        "optional_parameters": [
          "number",
          "quantity",
          "request"
        ],
        "parameter_types": {
          "number": "unknown",
          "cat_item": "string",
          "requested_for": "string",
          "quantity": "string",
          "request": "unknown",
          "state": "string",
          "short_description": "string"
        },
        "has_description": true,
        "complexity_score": 11
      }
    },
    {
      "name": "list_item_requests",
      "description": "List item requests from ServiceNow",
      "inputSchema": {
        "description": "Parameters for listing item requests.",
        "properties": {
          "limit": {
            "default": 10,
            "description": "Maximum number of item requests to return",
            "title": "Limit",
            "type": "integer"
          },
          "offset": {
            "default": 0,
            "description": "Offset for pagination",
            "title": "Offset",
            "type": "integer"
          },
          "requested_for": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by assigned user. You can input either sys_id or name of user",
            "title": "Requested For"
          },
          "cat_item": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by catalog item. You can input either sys_id or name of catalog item",
            "title": "Cat Item"
          },
          "number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by item number",
            "title": "Number"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by short description of the item request",
            "title": "Short Description"
          },
          "request_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by parent request sys_id",
            "title": "Request Id"
          }
        },
        "title": "ListItemRequestsParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 7,
        "required_parameters": [],
        "optional_parameters": [
          "limit",
          "offset",
          "requested_for",
          "cat_item",
          "number",
          "short_description",
          "request_id"
        ],
        "parameter_types": {
          "limit": "integer",
          "offset": "integer",
          "requested_for": "unknown",
          "cat_item": "unknown",
          "number": "unknown",
          "short_description": "unknown",
          "request_id": "unknown"
        },
        "has_description": true,
        "complexity_score": 7
      }
    },
    {
      "name": "list_expense_lines",
      "description": "List expense lines from ServiceNow. These hold the details of all the expenses that are made.",
      "inputSchema": {
        "description": "Parameters for getting an expense line.",
        "properties": {
          "limit": {
            "default": 10,
            "description": "Maximum number of expense lines to return",
            "title": "Limit",
            "type": "integer"
          },
          "offset": {
            "default": 0,
            "description": "Offset for pagination",
            "title": "Offset",
            "type": "integer"
          },
          "expense_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter expenses by expense number",
            "title": "Expense Number"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter expenses by short description using LIKE matching",
            "title": "Short Description"
          },
          "amount": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter expenses by amount",
            "title": "Amount"
          },
          "expense_hashtag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter expenses by expense hashtag",
            "title": "Expense Hashtag"
          }
        },
        "title": "ListExpenseLineParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 6,
        "required_parameters": [],
        "optional_parameters": [
          "limit",
          "offset",
          "expense_number",
          "short_description",
          "amount",
          "expense_hashtag"
        ],
        "parameter_types": {
          "limit": "integer",
          "offset": "integer",
          "expense_number": "unknown",
          "short_description": "unknown",
          "amount": "unknown",
          "expense_hashtag": "unknown"
        },
        "has_description": true,
        "complexity_score": 6
      }
    },
    {
      "name": "delete_expense_line",
      "description": "Delete an expense line from ServiceNow",
      "inputSchema": {
        "description": "Parameters for deleting an expense line.",
        "properties": {
          "sys_id": {
            "description": "Sys ID of the expense line to delete",
            "title": "Sys Id",
            "type": "string"
          }
        },
        "required": [
          "sys_id"
        ],
        "title": "DeleteExpenseLineParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 1,
        "required_parameters": [
          "sys_id"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "sys_id": "string"
        },
        "has_description": true,
        "complexity_score": 2
      }
    },
    {
      "name": "get_report",
      "description": "Get a specific report from ServiceNow. All the ServiceNow charts are represented as reports.",
      "inputSchema": {
        "description": "Parameters for getting a report. AND operation will be used if multiple parameters are provided.",
        "properties": {
          "report_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Report ID to get the report for",
            "title": "Report Id"
          },
          "report_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by multiple report ids. If provided, report_id will be ignored. OR operation will be used if multiple report ids are provided.",
            "title": "Report Ids"
          },
          "chart_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by title of the chart",
            "title": "Chart Title"
          }
        },
        "title": "GetReportParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 3,
        "required_parameters": [],
        "optional_parameters": [
          "report_id",
          "report_ids",
          "chart_title"
        ],
        "parameter_types": {
          "report_id": "unknown",
          "report_ids": "unknown",
          "chart_title": "unknown"
        },
        "has_description": true,
        "complexity_score": 3
      }
    },
    {
      "name": "get_report_ids_from_portal_widgets",
      "description": "Get all the report ids linked to the portal widgets on a dashboard.",
      "inputSchema": {
        "description": "Parameters for getting all the report ids linked to the portal widgets.",
        "properties": {
          "portal_widget_ids": {
            "description": "Portal widget IDs to get the report ids for",
            "items": {
              "type": "string"
            },
            "title": "Portal Widget Ids",
            "type": "array"
          }
        },
        "required": [
          "portal_widget_ids"
        ],
        "title": "GetReportIdsFromPortalWidgetsParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 1,
        "required_parameters": [
          "portal_widget_ids"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "portal_widget_ids": "array"
        },
        "has_description": true,
        "complexity_score": 2
      }
    },
    {
      "name": "get_canvas",
      "description": "Get the canvas page id linked to the dashboard tab.",
      "inputSchema": {
        "description": "Parameters for getting canvas page id. The canvas page has information about all the widgets (charts) on the dashboard.",
        "properties": {
          "tab_id": {
            "description": "Tab ID to get the canvas page id for",
            "title": "Tab Id",
            "type": "string"
          }
        },
        "required": [
          "tab_id"
        ],
        "title": "GetCanvasParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 1,
        "required_parameters": [
          "tab_id"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "tab_id": "string"
        },
        "has_description": true,
        "complexity_score": 2
      }
    },
    {
      "name": "get_portal_widgets",
      "description": "Get all the portal widget ids linked to the canvas page.",
      "inputSchema": {
        "description": "Parameters for getting all the portal widget ids linked to the canvas page. Each portal widget has information about the report id of one of the charts/reports on the dashboard.",
        "properties": {
          "canvas_id": {
            "description": "Canvas page ID to get the portal widget ids for",
            "title": "Canvas Id",
            "type": "string"
          }
        },
        "required": [
          "canvas_id"
        ],
        "title": "GetPortalWidgetsParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 1,
        "required_parameters": [
          "canvas_id"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "canvas_id": "string"
        },
        "has_description": true,
        "complexity_score": 2
      }
    },
    {
      "name": "get_dashboard_tab",
      "description": "Get the dashboard tab id linked to the dashboard.",
      "inputSchema": {
        "description": "Parameters for getting the dashboard tab id linked to the dashboard.",
        "properties": {
          "dashboard_id": {
            "description": "Dashboard ID to get the tab for",
            "title": "Dashboard Id",
            "type": "string"
          }
        },
        "required": [
          "dashboard_id"
        ],
        "title": "GetDashboardTabParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 1,
        "required_parameters": [
          "dashboard_id"
        ],
        "optional_parameters": [],
        "parameter_types": {
          "dashboard_id": "string"
        },
        "has_description": true,
        "complexity_score": 2
      }
    },
    {
      "name": "search_any_table",
      "description": "Search any ServiceNow table.",
      "inputSchema": {
        "description": "Parameters for getting records from any ServiceNow table",
        "properties": {
          "table": {
            "description": "Table to get the records from",
            "title": "Table",
            "type": "string"
          },
          "fields": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Specific fields to get from the table. If not provided, all fields will be returned.",
            "title": "Fields"
          },
          "filters": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filters to apply to the records. You must provide the field name and value of the field. You can have many field filters together. ^ indicates AND operation. ^OR indicates OR operation. LIKE is used for partial string matching. This must be a string.",
            "title": "Filters"
          },
          "limit": {
            "default": 10,
            "description": "Limit the number of records to return",
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "table"
        ],
        "title": "GetAnyTableParams",
        "type": "object"
      },
      "metadata": {},
      "analysis": {
        "parameter_count": 4,
        "required_parameters": [
          "table"
        ],
        "optional_parameters": [
          "fields",
          "filters",
          "limit"
        ],
        "parameter_types": {
          "table": "string",
          "fields": "unknown",
          "filters": "unknown",
          "limit": "integer"
        },
        "has_description": true,
        "complexity_score": 5
      }
    }
  ],
  "metadata": {
    "total_tools": 105,
    "generated_at": "2025-09-30T16:14:02.115039",
    "generator_version": "1.0"
  },
  "summary_statistics": {
    "total_tools": 105,
    "tools_with_parameters": 105,
    "tools_without_parameters": 0,
    "average_parameters_per_tool": 5.40952380952381,
    "most_complex_tools": [
      [
        "create_catalog_item_variable",
        18
      ],
      [
        "create_user",
        18
      ],
      [
        "update_asset",
        17
      ],
      [
        "create_asset",
        16
      ],
      [
        "update_incident",
        15
      ],
      [
        "update_user",
        15
      ],
      [
        "create_scrum_task",
        14
      ],
      [
        "create_change_request",
        13
      ],
      [
        "update_scrum_task",
        13
      ],
      [
        "create_incident",
        12
      ]
    ],
    "parameter_type_distribution": {
      "string": 114,
      "unknown": 410,
      "boolean": 11,
      "integer": 27,
      "array": 6
    },
    "common_parameter_names": {
      "description": 31,
      "limit": 24,
      "offset": 23,
      "active": 21,
      "short_description": 20,
      "state": 20,
      "assigned_to": 19,
      "query": 19,
      "assignment_group": 17,
      "name": 15,
      "category": 14,
      "work_notes": 8,
      "title": 8,
      "type": 8,
      "priority": 7,
      "fields": 7,
      "workflow_id": 7,
      "order": 6,
      "change_id": 6,
      "timeframe": 6,
      "impact": 5,
      "changeset_id": 5,
      "email": 5,
      "location": 5,
      "serial_number": 5,
      "asset_id": 5,
      "subcategory": 4,
      "parent": 4,
      "start_date": 4,
      "end_date": 4,
      "attributes": 4,
      "knowledge_base": 4,
      "manager": 4,
      "group_id": 4,
      "cost": 4,
      "model_category": 4,
      "urgency": 3,
      "incident_id": 3,
      "number": 3,
      "category_id": 3,
      "requested_for": 3,
      "table": 3,
      "developer": 3,
      "client_callable": 3,
      "script_include_id": 3,
      "article_id": 3,
      "user_name": 3,
      "department": 3,
      "members": 3,
      "asset_tag": 3,
      "model": 3,
      "comments": 3,
      "item_ids": 2,
      "price": 2,
      "item_id": 2,
      "icon": 2,
      "catalog_item_id": 2,
      "label": 2,
      "mandatory": 2,
      "help_text": 2,
      "default_value": 2,
      "reference_qualifier": 2,
      "max_length": 2,
      "min": 2,
      "max": 2,
      "quantity": 2,
      "risk": 2,
      "approval_comments": 2,
      "approver_id": 2,
      "activity_id": 2,
      "application": 2,
      "script": 2,
      "api_name": 2,
      "access": 2,
      "parent_category": 2,
      "text": 2,
      "keywords": 2,
      "workflow_state": 2,
      "first_name": 2,
      "last_name": 2,
      "roles": 2,
      "phone": 2,
      "mobile_phone": 2,
      "password": 2,
      "user_id": 2,
      "acceptance_criteria": 2,
      "story_points": 2,
      "epic": 2,
      "project": 2,
      "dependent_story": 2,
      "prerequisite_story": 2,
      "planned_hours": 2,
      "remaining_hours": 2,
      "hours": 2,
      "status": 2,
      "project_manager": 2,
      "percentage_complete": 2,
      "purchase_date": 2,
      "warranty_expiration": 2,
      "manufacturer": 2,
      "install_status": 2,
      "substatus": 2,
      "vendor": 2,
      "cat_item": 2,
      "random_string": 1,
      "caller_id": 1,
      "close_notes": 1,
      "close_code": 1,
      "comment": 1,
      "is_work_note": 1,
      "resolution_code": 1,
      "resolution_notes": 1,
      "category_ids": 1,
      "target_category_id": 1,
      "recommendation_types": 1,
      "reference_table": 1,
      "include_details": 1,
      "variable_id": 1,
      "item": 1,
      "requested_by": 1,
      "planned_start_date": 1,
      "planned_end_date": 1,
      "rejection_reason": 1,
      "include_versions": 1,
      "version": 1,
      "workflow_version_id": 1,
      "activity_type": 1,
      "activity_ids": 1,
      "commit_message": 1,
      "publish_notes": 1,
      "file_path": 1,
      "file_content": 1,
      "owner": 1,
      "managers": 1,
      "publish_workflow": 1,
      "retire_workflow": 1,
      "parent_table": 1,
      "article_type": 1,
      "workflow_version": 1,
      "story_id": 1,
      "dependency_id": 1,
      "epic_id": 1,
      "story": 1,
      "scrum_task_id": 1,
      "project_id": 1,
      "display_name": 1,
      "exact_match": 1,
      "reason": 1,
      "new_assigned_to": 1,
      "transfer_reason": 1,
      "request": 1,
      "request_id": 1,
      "expense_number": 1,
      "amount": 1,
      "expense_hashtag": 1,
      "sys_id": 1,
      "report_id": 1,
      "report_ids": 1,
      "chart_title": 1,
      "portal_widget_ids": 1,
      "tab_id": 1,
      "canvas_id": 1,
      "dashboard_id": 1,
      "filters": 1
    },
    "generation_timestamp": "2025-09-30T16:14:02.115047"
  }
}